{
  "name" : "Sales_Wave_Opportunity_Summary",
  "label" : "(Embedded) Sales Wave - Opportunity Summary",
  "description" : "Embedded Dashboard on Salesforce Page",
  "folder" : {
    "id" : "${App.Folder.Id}"
  },
  "mobileDisabled" : false,
  "state" : {
    "dataSourceLinks" : [ ],
    "filters" : [ ],
    "gridLayouts" : [ ],
    "layouts" : [
  {
        "device" : "default",
        "pages" : [
  {
            "rows" : [
  "text_Header{colspan=6, fontSize=28, textAlignment=left}",
  "dimfilter_1{colspan=6}",
  "box_NewLine1{colspan=6, hpad=-15}| row: {height=10}",
  "text_10{colspan=6, fontSize=22, textAlignment=left}",
  "number_8{colspan=6, fontSize=22, textAlignment=left}",
  "text_23{colspan=1, textAlignment=right, hpad=-10}|chart_5{colspan=5} | row:{height=70}",
  "box_NewLine2{colspan=6, hpad=-15}| row: {height=10}",
  "text_43{colspan=6, fontSize=22, textAlignment=left}",
  "number_10{colspan=6, fontSize=22, textAlignment=left}",
  "text_13{colspan=1, textAlignment=right, hpad=-10}|chart_12{colspan=5} | row:{height=70}",
  "box_NewLine3{colspan=6, hpad=-15}| row: {height=10}",
  "text_17{colspan=6, fontSize=22, textAlignment=left}",
  "buttongroup_4{colspan=6}",
  "chart_3{colspan=6}",
  "box_NewLine4{colspan=6, hpad=-15}| row: {height=10}",
  "text_20{colspan=6, fontSize=22, textAlignment=left}",
  "number_7{colspan=6, fontSize=22, textAlignment=left}",
  "box_NewLine5{colspan=6, hpad=-15}| row: {height=10}",
  "text_16{colspan=6, fontSize=22, textAlignment=left}",
  "number_15{colspan=6, fontSize=22, textAlignment=left}",
  "box_NewLine6{colspan=6, hpad=-15}| row: {height=10}",
  "text_11{colspan=6, fontSize=22, textAlignment=left}",
  "number_17{colspan=6, fontSize=22, textAlignment=left}",
  "box_NewLine7{colspan=6, hpad=-15}| row: {height=10}",
  "link_overview{colspan=6, vpad = 20}"
  ]
          }
  ],
        "version" : 1.0
      }
  ],
    "steps" : {
      "Name_6" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "count",
  "*"
  ]
  ],
            "groups" : [
  "Id"
  ]
          },
          "version" : -1.0
        },
        "selectMode" : "singlerequired",
        "start" : [ ],
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "Opportunity_Type_25" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "count",
  "*"
  ]
  ],
            "groups" : [
  "${Variables.Bookings.fieldName}"
  ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "Push_Counter_30" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "q = load \"${App.EdgeMarts.pipeline_trending.Alias}\"; q = filter q by 'OpportunityId' in {{selection(Name_6)}}; q = filter q by 'CloseDate_isUpdated' == \"1\"; q = foreach q generate 'Id' as 'Id', 'OpportunityId' as 'OpportunityId', 'CloseDate_isUpdated', 'CloseDate_sec_epoch', 'Opportunity.StageName', 'CloseDate', 'CloseDatePrev', 'CloseDate_sec_epoch'-'CloseDatePrev_sec_epoch' as 'diff';q = filter q by 'diff' > 0;q = group q by all; q = foreach q generate unique('CloseDate_sec_epoch')-1 as 'unique_Push_Counter';",
            "measures" : [
  [
  "unique",
  "Push_Counter"
  ]
  ],
            "groups" : [ ],
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "Days_in_Stage_31" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "q = load \"${App.EdgeMarts.pipeline_trending.Alias}\"; q = filter q by 'OpportunityId' in {{selection(Name_6)}}; q = filter q by 'Stage_isUpdated' == \"1\"; q = order q by 'CreatedDate_sec_epoch' asc;q = foreach q generate 'CreatedDate_sec_epoch' as 'CreatedDate_sec_epoch', 'Opportunity.StageName', (case when 'Opportunity.IsClosed' == \"false\" then daysBetween(toDate(last('CreatedDate_Day') + \"-\" + last('CreatedDate_Month') + \"-\" + last('CreatedDate_Year'), \"dd-MM-yyyy\"), now()) else 0 end) as 'sum_diff';",
            "measures" : [
  [
  "sum",
  "diff"
  ]
  ],
            "groups" : [ ],
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "get_AccountId" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "a = load \"${App.EdgeMarts.opportunity.Alias}\"; a = filter a by 'Id' in {{ selection(Name_6) }}; a = group a by 'AccountId'; a = foreach a generate 'AccountId' as 'AccountId';",
            "measures" : [ ],
            "groups" : [
  "AccountId"
  ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "Age_Comparison_20" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "a = load \"${App.EdgeMarts.opportunity.Alias}\";a = filter a by 'Id' in {{ selection(Name_6) }};a = foreach a generate (case when 'IsClosed' == \"true\" then sum('CloseDate_day_epoch') - sum('CreatedDate_day_epoch') else daysBetween(toDate('CreatedDate_Year' + \"-\" + 'CreatedDate_Month' + \"-\" + 'CreatedDate_Day', \"yyyy-MM-dd\"), now()) end) as 'sum_Days_Open', \" This Opportunity\" as 'Group', \" \" as 'Age';b = load \"${App.EdgeMarts.opportunity.Alias}\";b = filter b by  'AccountId' in {{results(get_AccountId)}}; b = group b by 'Name'; b = filter b by 'IsWon' == \"true\";b = foreach b generate 'Name' as 'Name', sum('CloseDate_day_epoch') - sum('CreatedDate_day_epoch') as 'Open_Days';b = group b by all;b = foreach b generate avg(b['Open_Days']) as 'sum_Days_Open', \"This Account (Avg) on Won Opportunities\" as 'Group', \"  \" as 'Age';c = union a, b;c = group c by ('Group', 'Age');c = foreach c generate 'Group' as 'Group', 'Age' as 'Age', sum('sum_Days_Open') as 'sum_sum_Days_Open';",
            "measures" : [
  [
  "sum",
  "sum_Days_Open",
  null,
  {
                  "display" : " "
                }
  ]
  ],
            "groups" : [
  "Group",
  "Age"
  ],
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "Till_Close_24" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "a = load \"${App.EdgeMarts.opportunity.Alias}\";a = filter a by 'Id' in {{ selection(Name_6) }}; a = foreach a generate (case when 'IsClosed' == \"false\" then daysBetween(now(), toDate(CloseDate_Year + \"-\" + CloseDate_Month  + \"-\" + CloseDate_Day, \"yyyy-MM-dd\")) else 0 end) as 'sum_Days_Open';",
            "measures" : [
  [
  "sum",
  "Days_Open"
  ]
  ],
            "groups" : [ ],
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "Sale_Cycle_2" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "a = load \"${App.EdgeMarts.opportunity.Alias}\";a = filter a by 'Id' in {{ selection(Name_6) }}; a = foreach a generate (case when 'IsClosed' == \"true\" then sum('CloseDate_day_epoch') - sum('CreatedDate_day_epoch') else daysBetween(toDate('CreatedDate_Year' + \"-\" + 'CreatedDate_Month' + \"-\" + 'CreatedDate_Day', \"yyyy-MM-dd\"), now()) end) as 'sum_Days_Open';",
            "measures" : [
  [
  "sum",
  "Days_Open"
  ]
  ],
            "groups" : [ ],
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "get_Current_Stage" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "a = load \"${App.EdgeMarts.opportunity.Alias}\"; a = filter a by 'Id' in {{ selection(Name_6) }}; a = group a by 'StageName'; a = foreach a generate 'StageName' as 'StageName';",
            "measures" : [ ],
            "groups" : [
  "StageName"
  ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "Stage_Comparison_32" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.pipeline_trending.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "a = load \"${App.EdgeMarts.pipeline_trending.Alias}\";a = filter a by 'OpportunityId' in {{selection(Name_6)}}; a = filter a by 'Stage_isUpdated' == \"1\"; a = order a by 'CreatedDate_sec_epoch' asc;a = foreach a generate 'CreatedDate_sec_epoch' as 'CreatedDate_sec_epoch', \" This Opportunity\" as 'Group', \" \" as 'StageDays', 'Opportunity.StageName', (case when 'Opportunity.IsClosed' == \"false\" then daysBetween(toDate(last('CreatedDate_Day') + \"-\" + last('CreatedDate_Month') + \"-\" + last('CreatedDate_Year'), \"dd-MM-yyyy\"), now()) else 0 end) as 'avg_days_in_stage'; q = load \"${App.EdgeMarts.pipeline_trending.Alias}\";q = filter q by 'Opportunity.AccountId' in {{results(get_AccountId)}}; q = filter q by 'Opportunity.IsWon' == \"true\"; q = filter q by 'Opportunity.StageName' in {{results(get_Current_Stage)}};x = foreach q generate 'Id', 'OpportunityId', (CreatedDate_sec_epoch - CreatedDatePrev_sec_epoch)/86400 as 'diff', 'StageNamePrev' as 'StageName', 'Stage.IsClosed';x = filter x by 'StageName' is not null;y = foreach q generate 'Id', 'OpportunityId', 'Opportunity.AccountId', daysBetween(toDate(CreatedDate_Day + \"-\" + CreatedDate_Month + \"-\" + CreatedDate_Year, \"dd-MM-yyyy\"), now()) as 'diff', 'StageName', 'Stage.IsClosed', 'CreatedDate';y = order y by 'CreatedDate' asc;y = group y by 'OpportunityId';y = foreach y generate 'OpportunityId', last('Opportunity.AccountId') as 'Opportunity.AccountId', last('Id') as 'Id', last('diff') as 'diff', last('StageName') as 'StageName', last('Stage.IsClosed') as 'Stage.IsClosed';z = union x, y;z = group z by 'StageName';z = foreach z generate first('Opportunity.AccountId') as 'Opportunity.AccountId', 'StageName', \"This Account (Avg) on Won Opportunities\" as 'Group', \"  \" as 'StageDays', (case when {{value(results(Closed_Status, 'Opportunity.IsClosed'))}} == \"true\" then 0 else ceil(avg('diff')) end) as 'avg_days_in_stage';c = union a, z;c = group c by ('Group', 'StageDays');c = foreach c generate 'Group' as 'Group', 'StageDays' as 'StageDays', avg('avg_days_in_stage') as 'avg_avg_days_in_stage';",
            "measures" : [
  [
  "avg",
  "avg_days_in_stage",
  null,
  {
                  "display" : " "
                }
  ]
  ],
            "groups" : [
  "Group",
  "StageDays"
  ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : false,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "Open_Activity_Count_15" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.task.Alias}"
          }
  ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "a = load \"${App.EdgeMarts.event.Alias}\";a = filter a by 'Opportunity.Id' in {{selection(Name_6)}};a = filter a by date('ActivityDate_Year', 'ActivityDate_Month', 'ActivityDate_Day') in {{no_quote(value(field(selection(IsClosed_201), 'event')))}}; a= group a by all; a = foreach a generate count() as 'count'; b = load \"${App.EdgeMarts.task.Alias}\"; b = filter b by 'Opportunity.Id' in {{selection(Name_6)}};b = filter b by 'IsClosed' == {{no_quote(value(field(selection(IsClosed_201), 'task')))}}; b = group b by all; b = foreach b generate count() as 'count'; c = union a,b; c = group c by all; c = foreach c generate sum('count') as 'count';",
            "measures" : [
  [
  "count",
  "*"
  ]
  ],
            "filters" : [ ],
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "Hidden_Activity_Count_100" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.task.Alias}"
          }
  ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "a = load \"${App.EdgeMarts.event.Alias}\";a = filter a by 'Opportunity.Id' in {{selection(Name_6)}}; a= group a by all; a = foreach a generate count() as 'count'; b = load \"${App.EdgeMarts.task.Alias}\"; b = filter b by 'Opportunity.Id' in {{selection(Name_6)}}; b = group b by all; b = foreach b generate count() as 'count'; c = union a,b; c = group c by all; c = foreach c generate sum('count') as 'count';",
            "measures" : [
  [
  "count",
  "*"
  ]
  ],
            "filters" : [ ],
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "Open_Activity_18" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.task.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "a = load \"${App.EdgeMarts.event.Alias}\"; a = filter a by 'Opportunity.Id' in {{selection(Name_6)}}; a = filter a by date('ActivityDate_Year', 'ActivityDate_Month', 'ActivityDate_Day') in {{no_quote(field(selection(IsClosed_201), 'event'))}}; a = group a by all; a = foreach a generate  \"Meeting\" as 'ActivityType', count() as 'count'; b = load \"${App.EdgeMarts.task.Alias}\";b = filter b by 'Opportunity.Id' in {{selection(Name_6)}}; b = filter b by 'IsClosed' == {{no_quote(value(field(selection(IsClosed_201), 'task')))}}; b = group b by 'TaskSubtype'; b = foreach b generate 'TaskSubtype' as 'ActivityType',count() as 'count'; c = union a,b; c = group c by 'ActivityType'; c = foreach c generate 'ActivityType' as 'ActivityType' , sum('count') as 'count'; c = order c by 'count' desc;",
            "measures" : [
  [
  "count",
  "*"
  ]
  ],
            "groups" : [
  "ActivityType"
  ],
            "filters" : [ ],
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "pie"
        }
      },
      "IsClosed_201" : {
        "datasets" : [ ],
        "dimensions" : [ ],
        "isFacet" : false,
        "isGlobal" : false,
        "selectMode" : "singlerequired",
        "start" : [
  [
  {
              "task" : "\"false\"",
              "event" : [
  "\"current day\"..\"25 ${Constants.Fiscal_Prefix}years ahead\""
  ]
            }
  ]
  ],
        "type" : "static",
        "useGlobal" : false,
        "values" : [
  {
            "display" : "Open",
            "value" : [
  {
                "task" : "\"false\"",
                "event" : [
  "\"current day\"..\"25 ${Constants.Fiscal_Prefix}years ahead\""
  ]
              }
  ]
          },
  {
            "display" : "Completed",
            "value" : [
  {
                "task" : "\"true\"",
                "event" : [
  "\"25 ${Constants.Fiscal_Prefix}years ago\"..\"1 day ago\""
  ]
              }
  ]
          }
  ]
      },
      "Last_Activity_6" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "q = load \"${App.EdgeMarts.opportunity.Alias}\";q = filter q by 'Id' in {{selection(Name_6)}}; q = foreach q generate 'Id' as 'Id', first('Account.Name') as 'AccountName', first('Name') as 'Name', first('Owner.Name') as 'OwnerName', first('ForecastCategoryName') as 'ForecastCategoryName', first('StageName') as StageName, first('${Variables.Bookings.fieldName}') as '${Variables.Bookings.fieldName}',first('${Variables.Customer.sobjectName}.${Variables.Customer.fieldName}') as '${Variables.Customer.sobjectName}.${Variables.Customer.fieldName}', first('${Variables.Customer_L2.sobjectName}.${Variables.Customer_L2.fieldName}') as '${Variables.Customer_L2.sobjectName}.${Variables.Customer_L2.fieldName}', first('${Variables.Geography.sobjectName}.${Variables.Geography.fieldName}') as '${Variables.Geography.sobjectName}.${Variables.Geography.fieldName}', first('${Variables.Geography_L2.sobjectName}.${Variables.Geography_L2.fieldName}') as '${Variables.Geography_L2.sobjectName}.${Variables.Geography_L2.fieldName}', first('${Variables.Source.sobjectName}.${Variables.Source.fieldName}') as '${Variables.Source.sobjectName}.${Variables.Source.fieldName}', first('${Variables.Source_L2.fieldName}') as '${Variables.Source_L2.fieldName}' , first('Owner.RoleNames') as 'Owner.RoleNames', first('Owner.Name') as 'Owner.Name', first('CloseDate') as 'CloseDate', (case when 'IsClosed' == \"false\" then abs(daysBetween(toDate('CreatedDate_Year' + \"-\" +'CreatedDate_Month' + \"-\" + 'CreatedDate_Day', \"yyyy-MM-dd\"),now())) else abs(daysBetween(toDate('CreatedDate_Year' + \"-\" + 'CreatedDate_Month' + \"-\" + 'CreatedDate_Day', \"yyyy-MM-dd\"), toDate('CloseDate_Year' + \"-\" + 'CloseDate_Month' + \"-\" + 'CloseDate_Day', \"yyyy-MM-dd\"))) end) as 'CreatedDate', first('CloseDate_Year') as 'CloseDate_Year', first('CloseDate_Month') as 'CloseDate_Month', first('CloseDate_Day') as 'CloseDate_Day', sum('${Variables.Opportunity_Amount.fieldName}') as '${Variables.Opportunity_Amount.fieldName}'; q = group q by ('Id','Name'); q = foreach q generate 'Id' as 'Id',first('CreatedDate') as 'DaysBetween','Name' as 'Name', first('CloseDate') as 'CloseDate', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}',count() as 'count'; srcTask = load \"${App.EdgeMarts.task.Alias}\"; srcTask = filter srcTask by 'Opportunity.Id' in {{selection(Name_6)}}; srcTask = foreach srcTask generate 'Opportunity.Id' as 'Id', (case when 'Opportunity.IsClosed' ==\"false\"  then abs(daysBetween(toDate('LastModifiedDate_Year' + \"-\" + 'LastModifiedDate_Month' + \"-\" + 'LastModifiedDate_Day',\"yyyy-MM-dd\"),now())) else abs(daysBetween(toDate('LastModifiedDate_Year' + \"-\" + 'LastModifiedDate_Month' + \"-\" + 'LastModifiedDate_Day', \"yyyy-MM-dd\"), toDate('Opportunity.CloseDate_Year${Constants.Fiscal_Postfix}' + \"-\" + 'Opportunity.CloseDate_Month' + \"-\" + 'Opportunity.CloseDate_Day', \"yyyy-MM-dd\"))) end) as 'LastModifiedDt'; srcTask = group srcTask by 'Id'; srcTask = foreach srcTask generate 'Id' as 'Id',min('LastModifiedDt') as 'DaysBetween'; srcEvent = load \"${App.EdgeMarts.event.Alias}\"; srcEvent = filter srcEvent by 'Opportunity.Id' in {{selection(Name_6)}}; srcEvent = foreach srcEvent generate 'Opportunity.Id' as 'Id', (case when 'Opportunity.IsClosed' ==\"false\" then abs(daysBetween(toDate('LastModifiedDate_Year' + \"-\" + 'LastModifiedDate_Month' + \"-\" + 'LastModifiedDate_Day',\"yyyy-MM-dd\"),now() )) else abs(daysBetween(toDate('LastModifiedDate_Year' + \"-\" + 'LastModifiedDate_Month' + \"-\" + 'LastModifiedDate_Day', \"yyyy-MM-dd\"), toDate('Opportunity.CloseDate_Year${Constants.Fiscal_Postfix}' + \"-\" + 'Opportunity.CloseDate_Month' + \"-\" + 'Opportunity.CloseDate_Day', \"yyyy-MM-dd\"))) end)as 'LastModifiedDt'; srcEvent = group srcEvent by 'Id'; srcEvent = foreach srcEvent generate 'Id' as 'Id',min('LastModifiedDt') as 'DaysBetween'; srcActi = union srcTask,srcEvent; srcActi = group srcActi by 'Id'; srcActi = foreach srcActi generate 'Id' as 'Id',min('DaysBetween') as 'DaysBetween'; srcTaskOppty = cogroup q by 'Id' left ,srcActi by 'Id'; srcTaskOppty = foreach srcTaskOppty generate q['Id'] as 'Id', first(q['Name']) as 'Name', sum(q['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_${Variables.Opportunity_Amount.fieldName}' , min(srcActi['DaysBetween']) as 'SDB', first(q['DaysBetween']) as 'QDB'; srcTaskOppty = group srcTaskOppty by all; srcTaskOppty = foreach srcTaskOppty generate (case when min(SDB) >= 0 then min(SDB) else  sum('QDB') end) as 'sum_last_activity';",
            "measures" : [
  [
  "sum",
  "last_activity"
  ]
  ],
            "groups" : [ ],
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "Closed_Status" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.pipeline_trending.Alias}"
          }
  ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "pigql" : "a = load \"${App.EdgeMarts.pipeline_trending.Alias}\";a = filter a by 'OpportunityId' in {{selection(Name_6)}};a = foreach a generate 'Opportunity.IsClosed', 'CreatedDate', 'OpportunityId', 'Opportunity.AccountId';a = order a by 'CreatedDate' asc;a = group a by all;a = foreach a generate last('Opportunity.IsClosed') as 'Opportunity.IsClosed', last('CreatedDate') as 'CreatedDate', last('Opportunity.AccountId') as 'Opportunity.AccountId';",
            "measures" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "grain",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      }
    },
    "widgets" : {
      "number_11" : {
        "parameters" : {
          "exploreLink" : false,
          "fontSize" : 32,
          "measureField" : "count",
          "step" : "Open_Activity_Count_15",
          "textAlignment" : "center",
          "textColor" : "rgb(64, 96, 127)",
          "title" : ""
        },
        "position" : {
          "w" : "130",
          "x" : 300,
          "y" : 160,
          "zIndex" : 84
        },
        "type" : "number"
      },
      "number_10" : {
        "parameters" : {
          "exploreLink" : false,
          "fontSize" : 32,
          "measureField" : "sum_diff",
          "step" : "Days_in_Stage_31",
          "textAlignment" : "left",
          "textColor" : "rgb(64, 96, 127)",
          "title" : ""
        },
        "position" : {
          "w" : "130",
          "x" : 10,
          "y" : 240,
          "zIndex" : 72
        },
        "type" : "number"
      },
      "text_18" : {
        "parameters" : {
          "fontSize" : 13,
          "text" : "Activities",
          "textColor" : "rgb(64, 96, 127)"
        },
        "position" : {
          "x" : 300,
          "y" : 200,
          "zIndex" : 87
        },
        "type" : "text"
      },
      "text_17" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Activity Breakdown",
          "textAlignment" : "left",
          "textColor" : "rgb(64, 96, 127)"
        },
        "position" : {
          "x" : 270,
          "y" : 50,
          "zIndex" : 86
        },
        "type" : "text"
      },
      "link_overview" : {
        "parameters" : {
          "destination" : "${App.Dashboards['Sales Wave - Overview'].Id}",
          "destinationType" : "dashboard",
          "fontSize" : 14,
          "text" : "Go To Overview",
          "textColor" : "rgb(74, 144, 226)",
          "visualizationType" : "hbar"
        },
        "position" : {
          "x" : 640,
          "y" : 290,
          "zIndex" : 48
        },
        "type" : "link"
      },
      "box_NewLine7" : {
        "parameters" : {
          "backgroundColor" : "rgb(240,240,244)",
          "borderColor" : "rgba(0, 0, 0, 0)"
        },
        "position" : {
          "h" : "40",
          "w" : "260",
          "x" : -310,
          "y" : 0,
          "zIndex" : 0
        },
        "type" : "box"
      },
      "text_13" : {
        "parameters" : {
          "fontSize" : 12,
          "text" : "Account Avg",
          "textAlignment" : "left",
          "textColor" : "rgb(125, 152, 179)"
        },
        "position" : {
          "x" : 130,
          "y" : 290,
          "zIndex" : 76
        },
        "type" : "text"
      },
      "box_NewLine6" : {
        "parameters" : {
          "backgroundColor" : "rgb(240,240,244)",
          "borderColor" : "rgba(0, 0, 0, 0)"
        },
        "position" : {
          "h" : "40",
          "w" : "260",
          "x" : -310,
          "y" : 0,
          "zIndex" : 0
        },
        "type" : "box"
      },
      "text_16" : {
        "parameters" : {
          "fontSize" : 13,
          "text" : "Days Until Close",
          "textAlignment" : "left",
          "textColor" : "rgb(64, 96, 127)"
        },
        "position" : {
          "x" : 610,
          "y" : 154,
          "zIndex" : 91
        },
        "type" : "text"
      },
      "box_NewLine5" : {
        "parameters" : {
          "backgroundColor" : "rgb(240,240,244)",
          "borderColor" : "rgba(0, 0, 0, 0)"
        },
        "position" : {
          "h" : "40",
          "w" : "260",
          "x" : -310,
          "y" : 0,
          "zIndex" : 0
        },
        "type" : "box"
      },
      "number_17" : {
        "parameters" : {
          "exploreLink" : false,
          "fontSize" : 16,
          "measureField" : "unique_Push_Counter",
          "step" : "Push_Counter_30",
          "textColor" : "rgb(125, 152, 179)",
          "title" : ""
        },
        "position" : {
          "w" : "180",
          "x" : 610,
          "y" : 190,
          "zIndex" : 94
        },
        "type" : "number"
      },
      "box_NewLine4" : {
        "parameters" : {
          "backgroundColor" : "rgb(240,240,244)",
          "borderColor" : "rgba(0, 0, 0, 0)"
        },
        "position" : {
          "h" : "40",
          "w" : "260",
          "x" : -310,
          "y" : 0,
          "zIndex" : 0
        },
        "type" : "box"
      },
      "text_10" : {
        "parameters" : {
          "fontSize" : 13,
          "text" : "Days in Sales Cycle",
          "textAlignment" : "left",
          "textColor" : "rgb(64, 96, 127)"
        },
        "position" : {
          "x" : 10,
          "y" : 50,
          "zIndex" : 98
        },
        "type" : "text"
      },
      "box_NewLine3" : {
        "parameters" : {
          "backgroundColor" : "rgb(240,240,244)",
          "borderColor" : "rgba(0, 0, 0, 0)"
        },
        "position" : {
          "h" : "40",
          "w" : "260",
          "x" : -310,
          "y" : 0,
          "zIndex" : 0
        },
        "type" : "box"
      },
      "number_15" : {
        "parameters" : {
          "exploreLink" : false,
          "fontSize" : 32,
          "measureField" : "sum_Days_Open",
          "step" : "Till_Close_24",
          "textAlignment" : "left",
          "textColor" : "rgb(64, 96, 127)",
          "title" : ""
        },
        "position" : {
          "w" : "140",
          "x" : 610,
          "y" : 180,
          "zIndex" : 92
        },
        "type" : "number"
      },
      "number_8" : {
        "parameters" : {
          "exploreLink" : false,
          "fontSize" : 32,
          "measureField" : "sum_Days_Open",
          "step" : "Sale_Cycle_2",
          "textAlignment" : "left",
          "textColor" : "rgb(64, 96, 127)",
          "title" : ""
        },
        "position" : {
          "w" : "130",
          "x" : 10,
          "y" : 80,
          "zIndex" : 65
        },
        "type" : "number"
      },
      "text_31" : {
        "parameters" : {
          "fontSize" : 11,
          "text" : "DATA REFRESHED EVERY 24 HOURS",
          "textAlignment" : "left",
          "textColor" : "rgb(125, 152, 179)"
        },
        "position" : {
          "x" : 0,
          "y" : 0,
          "zIndex" : 58
        },
        "type" : "text"
      },
      "box_NewLine2" : {
        "parameters" : {
          "backgroundColor" : "rgb(240,240,244)",
          "borderColor" : "rgba(0, 0, 0, 0)"
        },
        "position" : {
          "h" : "40",
          "w" : "260",
          "x" : -310,
          "y" : 0,
          "zIndex" : 0
        },
        "type" : "box"
      },
      "box_NewLine1" : {
        "parameters" : {
          "backgroundColor" : "rgb(240,240,244)",
          "borderColor" : "rgba(0, 0, 0, 0)"
        },
        "position" : {
          "h" : "40",
          "w" : "260",
          "x" : -310,
          "y" : 0,
          "zIndex" : 0
        },
        "type" : "box"
      },
      "number_7" : {
        "parameters" : {
          "exploreLink" : false,
          "fontSize" : 32,
          "measureField" : "sum_last_activity",
          "step" : "Last_Activity_6",
          "textAlignment" : "left",
          "textColor" : "rgb(64, 96, 127)",
          "title" : ""
        },
        "position" : {
          "w" : "160",
          "x" : 610,
          "y" : 70,
          "zIndex" : 43
        },
        "type" : "number"
      },
      "text_11" : {
        "parameters" : {
          "fontSize" : 12,
          "text" : "Pushed Close Date",
          "textAlignment" : "right",
          "textColor" : "rgb(125, 152, 179)"
        },
        "position" : {
          "x" : 660,
          "y" : 220,
          "zIndex" : 93
        },
        "type" : "text"
      },
      "box_18" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(230, 236, 242)"
        },
        "position" : {
          "h" : "150",
          "w" : "250",
          "x" : 10,
          "y" : 30,
          "zIndex" : 34
        },
        "type" : "box"
      },
      "chart_5" : {
        "parameters" : {
          "visualizationType" : "stackhbar",
          "step" : "Age_Comparison_20",
          "exploreLink" : false,
          "miniBars" : 10
        },
        "position" : {
          "h" : "120",
          "w" : "130",
          "x" : 130,
          "y" : 20,
          "zIndex" : 66
        },
        "type" : "chart"
      },
      "box_4" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgba(0, 0, 0, 0)"
        },
        "position" : {
          "h" : "10",
          "w" : "130",
          "x" : 128,
          "y" : 106,
          "zIndex" : 60
        },
        "type" : "box"
      },
      "box_11" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(255, 255, 255)"
        },
        "position" : {
          "h" : "30",
          "w" : "130",
          "x" : 128,
          "y" : 216,
          "zIndex" : 68
        },
        "type" : "box"
      },
      "box_9" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(255, 255, 255)"
        },
        "position" : {
          "h" : "50",
          "w" : "160",
          "x" : 430,
          "y" : 100,
          "zIndex" : 88
        },
        "type" : "box"
      },
      "box_8" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(255, 255, 255)"
        },
        "position" : {
          "h" : "30",
          "w" : "130",
          "x" : 120,
          "y" : 227,
          "zIndex" : 74
        },
        "type" : "box"
      },
      "chart_3" : {
        "parameters" : {
          "legend" : true,
          "visualizationType" : "pie",
          "step" : "Open_Activity_18",
          "exploreLink" : false
        },
        "position" : {
          "h" : "250",
          "w" : "330",
          "x" : 270,
          "y" : 100,
          "zIndex" : 81
        },
        "type" : "chart"
      },
      "text_43" : {
        "parameters" : {
          "fontSize" : 13,
          "text" : "Days in Current Stage",
          "textAlignment" : "left",
          "textColor" : "rgb(64, 96, 127)"
        },
        "position" : {
          "x" : 10,
          "y" : 200,
          "zIndex" : 83
        },
        "type" : "text"
      },
      "text_20" : {
        "parameters" : {
          "fontSize" : 13,
          "text" : "Days Since Last Activity",
          "textAlignment" : "left",
          "textColor" : "rgb(64, 96, 127)"
        },
        "position" : {
          "x" : 610,
          "y" : 44,
          "zIndex" : 90
        },
        "type" : "text"
      },
      "dimfilter_1" : {
        "parameters" : {
          "expanded" : false,
          "measureField" : "count",
          "selectModeOverride" : "singlerequired",
          "step" : "Name_6"
        },
        "position" : {
          "h" : "50",
          "w" : "250",
          "x" : -800,
          "y" : 540,
          "zIndex" : 100001
        },
        "type" : "listselector"
      },
      "buttongroup_4" : {
        "parameters" : {
          "exploreLink" : false,
          "measureField" : "",
          "selectModeOverride" : "singlerequired",
          "step" : "IsClosed_201"
        },
        "position" : {
          "w" : "160",
          "x" : 440,
          "y" : 30,
          "zIndex" : 82
        },
        "type" : "pillbox"
      },
      "text_23" : {
        "parameters" : {
          "fontSize" : 12,
          "text" : "Account Avg",
          "textAlignment" : "left",
          "textColor" : "rgb(125, 152, 179)"
        },
        "position" : {
          "x" : 130,
          "y" : 110,
          "zIndex" : 69
        },
        "type" : "text"
      },
      "dimfilter_2" : {
        "parameters" : {
          "expanded" : false,
          "step" : "Opportunity_Type_25",
          "title" : "Opportunity Type"
        },
        "position" : {
          "h" : "50",
          "w" : "160",
          "x" : -870,
          "y" : 460,
          "zIndex" : 100001
        },
        "type" : "listselector"
      },
      "box_29" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(255, 255, 255)"
        },
        "position" : {
          "h" : "30",
          "w" : "780",
          "x" : 0,
          "y" : 362,
          "zIndex" : 96
        },
        "type" : "box"
      },
      "box_28" : {
        "parameters" : {
          "backgroundColor" : "rgba(0, 140, 201, 0)",
          "borderColor" : "rgb(230, 236, 242)"
        },
        "position" : {
          "h" : "20",
          "w" : "770",
          "x" : 10,
          "y" : 361,
          "zIndex" : 95
        },
        "type" : "box"
      },
      "box_27" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(230, 236, 242)"
        },
        "position" : {
          "h" : "110",
          "w" : "190",
          "x" : 610,
          "y" : 140,
          "zIndex" : 33
        },
        "type" : "box"
      },
      "box_26" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(230, 236, 242)"
        },
        "position" : {
          "h" : "330",
          "w" : "350",
          "x" : 260,
          "y" : 30,
          "zIndex" : 43
        },
        "type" : "box"
      },
      "box_25" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(230, 236, 242)"
        },
        "position" : {
          "h" : "110",
          "w" : "190",
          "x" : 610,
          "y" : 250,
          "zIndex" : 31
        },
        "type" : "box"
      },
      "box_24" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(230, 236, 242)"
        },
        "position" : {
          "h" : "180",
          "w" : "250",
          "x" : 10,
          "y" : 180,
          "zIndex" : 71
        },
        "type" : "box"
      },
      "box_23" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(230, 236, 242)"
        },
        "position" : {
          "h" : "110",
          "w" : "190",
          "x" : 610,
          "y" : 30,
          "zIndex" : 32
        },
        "type" : "box"
      },
      "box_22" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgba(0, 0, 0, 0)"
        },
        "position" : {
          "h" : "30",
          "w" : "130",
          "x" : 120,
          "y" : 45,
          "zIndex" : 97
        },
        "type" : "box"
      },
      "box_21" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(255, 255, 255)"
        },
        "position" : {
          "h" : "30",
          "w" : "130",
          "x" : 128,
          "y" : 326,
          "zIndex" : 75
        },
        "type" : "box"
      },
      "chart_12" : {
        "parameters" : {
          "visualizationType" : "stackhbar",
          "step" : "Stage_Comparison_32",
          "exploreLink" : false,
          "miniBars" : 10
        },
        "position" : {
          "h" : "120",
          "w" : "130",
          "x" : 130,
          "y" : 200,
          "zIndex" : 73
        },
        "type" : "chart"
      },
      "text_Header" : {
        "parameters" : {
          "fontSize" : 13,
          "text" : "Sales Wave - Opportunity Summary",
          "textAlignment" : "left",
          "textColor" : "rgb(64, 96, 127)"
        },
        "position" : {
          "x" : -960,
          "y" : 44,
          "zIndex" : 91
        },
        "type" : "text"
      }
    }
  }
}