{
  "name" : "Sales_Wave_Forecast_Review",
  "label" : "Sales Wave - Forecast Review",
  "folder" : {
    "id" : "${App.Folder.Id}"
  },
  "mobileDisabled" : false,
  "state" : {
    "dataSourceLinks" : [ ],
    "filters" : [ ],
    "gridLayouts" : [ ],
    "layouts" : [
  {
        "device" : "default",
        "pages" : [
  {
            "rows" : [
  "box_line1 {colspan=6, rowspan=5, zIndex=-1, vpad=-10, hpad=-15} | row: {height=15}",
  "Text_Title{colspan=6}",
  "dimfilter_7{colspan=3} | dimfilter_5{colspan=3}",
  "dimfilter_6{colspan=3} | dimfilter_4{colspan=3}",
  "| row : {height=15}",
  "| row : {height=20}",
  "text_19{colspan=3} | text_20{colspan=3}",
  "row : {height=8}",
  "number_29 {colspan=3, fontSize=28, textAlignment=left} | number_26{colspan=3, fontSize=28, textAlignment=left}",
  "number_need_to_close{colspan=3, fontSize=28} | number_need_to_find{colspan=3, fontSize=28}",
  "link_pipe_review {colspan=3} | link_2{colspan=3}",
  "row : {height=15}",
  "box_NewLine {colspan=6} | row: {height=1}",
  "row : {height=15}",
  "text_24{colspan=6, fontSize=24}",
  "row : {height=5}",
  "number_7{colspan=6, fontSize=28}",
  "number_23{colspan=1} | text_41{colspan=2}",
  "row : {height=20}",
  "box_NewLine1 {colspan=6} | row: {height=1}",
  "row : {height=10}",
  "text_67{colspan=3, fontSize=24} | number_200{colspan=3, fontSize=28}",
  "row : {height=10}",
  "number_100{colspan=3, fontSize=28} | number_18{colspan=3, fontSize=28}",
  "row : {height=20}",
  "box_NewLine2 {colspan=6} | row: {height=1}",
  "row : {height=10}",
  "text_28{colspan=3, fontSize=24} | number_10{colspan=3, fontSize=28}",
  "row : {height=10}",
  "number_9{colspan=3, fontSize=28} | number_11{colspan=3, fontSize=28}",
  "row : {height=20}",
  "box_NewLine3 {colspan=6} | row: {height=1}",
  "row : {height=10}",
  "Text_Total{colspan=3, fontSize=24} | number_16{colspan=3, fontSize=28}",
  "row : {height=10}",
  "number_17{colspan=3, fontSize=28} | number_12{colspan=3, fontSize=28}",
  "number_21{colspan=1} | text_37{colspan=2}"
  ]
          },
  {
            "rows" : [
  "text_12{colspan=6, fontSize=24}",
  "row: {height=10}",
  "text_120{colspan=6, fontSize=18}",
  "chart_8 {colspan=6}",
  "row : {height=15}",
  "box_NewLine21 {colspan=6} | row: {height=1}",
  "row : {height=15}",
  "text_27 {colspan=6, fontSize=24, vpad=10}",
  "sel_hbar_time {colspan=6}",
  "row : {height=10}",
  "text_40{colspan=6, fontSize=20}",
  "chart_6{colspan=6}",
  "valuestable_2{colspan=6}",
  "row : {height=10}",
  "text_38{colspan=6, fontSize=20}",
  "chart_4{colspan=6}",
  "valuestable_1{colspan=6}"
  ]
          }
  ],
        "version" : 1.0
      }
  ],
    "steps" : {
      "step_type_of_forecast" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "count",
  "*"
  ]
  ],
            "groups" : [
  "ForecastCategoryName"
  ],
            "filters" : [
  [
  "ForecastCategory",
  [
  "Closed",
  "Omitted"
  ],
  "not in"
  ]
  ]
          },
          "version" : -1.0
        },
        "selectMode" : "multi",
        "start" : [
  "Commit"
  ],
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "step_kpi_1_cf" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "sum",
  "finalcf"
  ]
  ],
            "pigql" : "a = load \"${App.EdgeMarts.opportunity.Alias}\";a = filter a by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];a = filter a by 'IsWon' in [\"true\"]; a = filter a  by '${Variables.Bookings.fieldName}' in {{selection(Type_26)}};a = filter a  by 'Owner.Name' in  {{results(mgr_get_list)}}  ; a = foreach a generate sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}',0 as sum_QuotaAmount; b = load \"${App.EdgeMarts.quota.Alias}\";b = filter b by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}]; b = filter b  by 'OwnerName' in  {{results(mgr_get_list)}}  ; b = foreach b generate 0 as 'sum_${Variables.Opportunity_Amount.fieldName}',sum('QuotaAmount') as 'sum_QuotaAmount';c = union a,b; c = group c by all;c = foreach c generate  coalesce(sum('sum_${Variables.Opportunity_Amount.fieldName}')/sum('sum_QuotaAmount') ,0) as 'final';e = group c by all; qacf = foreach e generate ( case when sum('final') > 1 then  \"Green\" when sum('final')  <= 1  &&  sum('final')  >= 0.7 then \"Amber\"  when  sum('final')  < 0.7 then  \"Red\" when sum('final')  == 0 then \"Red\"  else \"Red\" end) as 'RAG' , sum('final') as  'sum_finalcf'; ",
            "groups" : [
  "RAG"
  ],
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true
      },
      "CloseDate_Year_CloseDate_Month_ForecastCategory_18" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "sum",
  "${Variables.Opportunity_Amount.fieldName}"
  ]
  ],
            "groups" : [
  "{{value(selection(step_hbar_time)) }}",
  "ForecastCategoryName"
  ],
            "filters" : [
  [
  "ForecastCategoryName",
  "{{ selection(step_type_of_forecast) }}",
  "in"
  ],
  [
  "IsClosed",
  [
  "false"
  ],
  "in"
  ],
  [
  "CloseDate",
  [
  "{{ value(field(selection(step_grouplist3),'Next')) }}"
  ],
  null
  ],
  [
  "Owner.Name",
  "{{results(mgr_get_list)}}",
  "in"
  ]
  ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "stackvbar"
        }
      },
      "step_3" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "facet_filters" : [ ],
            "measures" : [
  [
  "count",
  "*"
  ]
  ],
            "values" : [ ],
            "groups" : [ ],
            "filters" : [
  [
  "IsWon",
  [
  "true"
  ]
  ],
  [
  "CloseDate",
  [
  "{{ value(field(selection(step_grouplist3),'Current')) }}"
  ]
  ],
  [
  "Owner.Name",
  "{{results(mgr_get_list)}}",
  "in"
  ],
  [
  "${Variables.Bookings.fieldName}",
  "{{selection(Type_26)}}"
  ]
  ],
            "aggregateFilters" : [ ],
            "dimensions" : [ ],
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "_PIGQL_step_yoy" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "sum",
  "YoY"
  ]
  ],
            "pigql" : "SRC = load \"${App.EdgeMarts.opportunity.Alias}\";SRC = filter SRC by ('IsClosed' == \"false\" and  'ForecastCategoryName' in {{ selection(step_type_of_forecast) }}) ;SRC = filter SRC by '${Variables.Bookings.fieldName}' in {{selection(Type_26)}};SRC = filter SRC by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in  [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];OWN = filter SRC by 'Owner.Role.DeveloperName' in {{results(mgr_get_manager,'Role.DeveloperName')}} or 'Owner.Role.DeveloperName' in {{selection(filter_role)}};OWN = group OWN by 'Owner.Name';OWN = foreach OWN generate \"S\" as 'GroupType', 'Owner.Name' as 'Name', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}',count() as 'count';DIR = filter SRC by 'Owner.RoleNames' in {{results(mgr_get_manager,'Role.DeveloperName')}};DIR = group DIR by 'Owner.RoleNames';DIR = foreach DIR generate \"D\" as 'GroupType', 'Owner.RoleNames' as 'Name', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}',count() as 'count';OPPTY = union OWN,DIR;OPPTY = group OPPTY by all;fctamt = foreach OPPTY generate  sum('sum_${Variables.Opportunity_Amount.fieldName}') as  'sum_forecast',  sum('count') as 'count';wsr = load \"${App.EdgeMarts.opportunity.Alias}\";wsr = filter wsr by 'IsWon' ==\"true\" ;wsr = filter wsr by '${Variables.Bookings.fieldName}' in {{selection(Type_26)}};wsr = filter wsr by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in  [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];wsrOWN = filter wsr by 'Owner.Role.DeveloperName' in {{results(mgr_get_manager,'Role.DeveloperName')}} or 'Owner.Role.DeveloperName' in {{selection(filter_role)}};wsrOWN = group wsrOWN by 'Owner.Name';wsrOWN = foreach wsrOWN generate \"S\" as 'GroupType', 'Owner.Name' as 'Name', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}',count() as 'count';wsrDIR = filter wsr by 'Owner.RoleNames' in {{results(mgr_get_manager,'Role.DeveloperName')}};wsrDIR = group wsrDIR by 'Owner.RoleNames';wsrDIR = foreach wsrDIR generate \"D\" as 'GroupType', 'Owner.RoleNames' as 'Name', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}',count() as 'count';wsrOPPTY = union wsrOWN,wsrDIR;wsrOPPTY = group wsrOPPTY by all;wsrfctamt = foreach wsrOPPTY generate  sum('sum_${Variables.Opportunity_Amount.fieldName}') as  'sum_forecast',  sum('count') as 'count';allfct = union fctamt,wsrfctamt;allfct = group allfct by all;yoy_calc = foreach allfct generate (sum('sum_forecast') - {{ value(results(won_previous_period, 'sum_${Variables.Opportunity_Amount.fieldName}')) - 0 || 0}}) / {{ value(results(won_previous_period, 'sum_${Variables.Opportunity_Amount.fieldName}')) - 0 || 0 }} as 'sum_YoY';",
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : false
      },
      "_PIGQL_CF" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "sum",
  "finalcf"
  ]
  ],
            "pigql" : "a = load \"${App.EdgeMarts.opportunity.Alias}\";a = filter a by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];a = filter a by 'ForecastCategoryName' in {{ selection(step_type_of_forecast) }};a = filter a  by '${Variables.Bookings.fieldName}' in {{selection(Type_26)}};a = filter a by 'Owner.Name' in  {{results(mgr_get_list)}} ;a = group a by all; a = foreach a generate sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}'; b = load \"${App.EdgeMarts.opportunity.Alias}\"; b = filter b by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];b = filter b by 'IsWon' == \"true\"; b = filter b  by '${Variables.Bookings.fieldName}' in {{selection(Type_26)}};b = filter b by 'Owner.Name' in  {{results(mgr_get_list)}} ;b = group b by all; b = foreach b generate sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}';c = union a,b;c = group c by all;c = foreach c generate sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_forecast';d = load \"${App.EdgeMarts.quota.Alias}\";d = filter d by 'OwnerName' in  {{results(mgr_get_list)}} ;d = filter d by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];d = group d by all;d = foreach d generate sum('QuotaAmount') as 'sum_forecast';e = cogroup c by all,d by all;e = foreach e generate (sum(c['sum_forecast']) / sum(d['sum_forecast'])) as 'final';e = group e by all; f = filter e by 'final' > 1; f = foreach f generate \"Green\" as 'CF', sum('final') as 'final'; j = filter e by  'final' <= 1  &&  'final' >= 0.7 ; j = foreach j generate \"Amber\" as 'CF', sum('final') as 'final';g = filter e by 'final' < 0.7 ; g = foreach g generate \"Red\" as 'CF' , sum('final') as 'final';h = union f,g,j;h = group h by 'CF';h = foreach h generate 'CF' as 'RAG' ,sum('final') as 'sum_finalcf'; ",
            "groups" : [
  "RAG"
  ],
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : false
      },
      "Type_26" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "sum",
  "${Variables.Opportunity_Amount.fieldName}"
  ]
  ],
            "groups" : [
  "${Variables.Bookings.fieldName}"
  ]
          },
          "version" : -1.0
        },
        "selectMode" : "multi",
        "start" : [ ],
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "step_12" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.quota.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "facet_filters" : [ ],
            "measures" : [
  [
  "sum",
  "QuotaAmount"
  ]
  ],
            "pigql" : "src = load \"${App.EdgeMarts.quota.Alias}\"; src = filter src by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in   [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}]; own = filter src by 'User.Role.DeveloperName' in {{ results(mgr_get_manager,'Role.DeveloperName') }} or 'User.Role.DeveloperName' in {{ selection(filter_role) }} ; own = group own by 'OwnerName' ; own = foreach own generate \"S\" as 'GroupType', 'OwnerName' as 'Name', sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}' ; dir = filter src by 'User.RoleNames' in {{ results(mgr_get_manager,'Role.DeveloperName') }} ; dir = group dir by 'User.RoleNames' ; dir = foreach dir generate \"D\" as 'GroupType', 'User.RoleNames' as 'Name', sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}' ; oppty = union own,dir ; oppty = group oppty by all ; allQuota = foreach oppty generate  sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_QuotaAmount'; ",
            "values" : [ ],
            "groups" : [ ],
            "filters" : [ ],
            "aggregateFilters" : [ ],
            "dimensions" : [ ],
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "Amount_23" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "avg",
  "${Variables.Opportunity_Amount.fieldName}"
  ]
  ],
            "filters" : [
  [
  "IsWon",
  [
  "true"
  ]
  ],
  [
  "CloseDate",
  [
  "{{ value(field(selection(step_grouplist3),'Current')) }}"
  ]
  ],
  [
  "Owner.Name",
  "{{results(mgr_get_list)}}",
  "in"
  ],
  [
  "${Variables.Bookings.fieldName}",
  "{{selection(Type_26)}}"
  ]
  ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "_PIGQL_step_quota_yoy" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "sum",
  "YoY"
  ]
  ],
            "pigql" : "src = load \"${App.EdgeMarts.quota.Alias}\";src = filter src by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day') in   [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];own = filter src by 'User.Role.DeveloperName' in {{ results(mgr_get_manager,'Role.DeveloperName') }} or 'User.Role.DeveloperName' in {{ selection(filter_role) }} ;own = group own by 'OwnerName' ;own = foreach own generate \"S\" as 'GroupType', 'OwnerName' as 'Name', sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}' ;dir = filter src by 'User.RoleNames' in {{ results(mgr_get_manager,'Role.DeveloperName') }} ;dir = group dir by 'User.RoleNames' ;dir = foreach dir generate \"D\" as 'GroupType', 'User.RoleNames' as 'Name', sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}' ;oppty = union own,dir ;oppty = group oppty by all ;yoy_calc = foreach oppty generate  ((sum('sum_${Variables.Opportunity_Amount.fieldName}')   - {{ value(results(won_previous_period, 'sum_${Variables.Opportunity_Amount.fieldName}')) - 0 || 0}}) / {{ value(results(won_previous_period, 'sum_${Variables.Opportunity_Amount.fieldName}')) - 0 || 0 }}) as 'sum_YoY';",
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : false
      },
      "forecast_to_quota" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "sum",
  "quota_attainment"
  ]
  ],
            "pigql" : "SRC = load \"${App.EdgeMarts.opportunity.Alias}\"; SRC = filter SRC by ('IsClosed' == \"false\" and  'ForecastCategoryName' in {{ selection(step_type_of_forecast) }}) ; SRC = filter SRC by '${Variables.Bookings.fieldName}' in {{selection(Type_26)}}; SRC = filter SRC by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in  [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}]; OWN = filter SRC by 'Owner.Role.DeveloperName' in {{results(mgr_get_manager,'Role.DeveloperName')}} or 'Owner.Role.DeveloperName' in {{selection(filter_role)}}; OWN = group OWN by 'Owner.Name'; OWN = foreach OWN generate \"S\" as 'GroupType', 'Owner.Name' as 'Name', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}',count() as 'count'; DIR = filter SRC by 'Owner.RoleNames' in {{results(mgr_get_manager,'Role.DeveloperName')}}; DIR = group DIR by 'Owner.RoleNames'; DIR = foreach DIR generate \"D\" as 'GroupType', 'Owner.RoleNames' as 'Name', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}',count() as 'count'; OPPTY = union OWN,DIR; OPPTY = group OPPTY by all; fctamt = foreach OPPTY generate  sum('sum_${Variables.Opportunity_Amount.fieldName}') as  'sum_forecast',  sum('count') as 'count'; wsr = load \"${App.EdgeMarts.opportunity.Alias}\"; wsr = filter wsr by 'IsWon' ==\"true\" ; wsr = filter wsr by '${Variables.Bookings.fieldName}' in {{selection(Type_26)}}; wsr = filter wsr by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in  [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}]; wsrOWN = filter wsr by 'Owner.Role.DeveloperName' in {{results(mgr_get_manager,'Role.DeveloperName')}} or 'Owner.Role.DeveloperName' in {{selection(filter_role)}}; wsrOWN = group wsrOWN by 'Owner.Name'; wsrOWN = foreach wsrOWN generate \"S\" as 'GroupType', 'Owner.Name' as 'Name', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}',count() as 'count'; wsrDIR = filter wsr by 'Owner.RoleNames' in {{results(mgr_get_manager,'Role.DeveloperName')}}; wsrDIR = group wsrDIR by 'Owner.RoleNames'; wsrDIR = foreach wsrDIR generate \"D\" as 'GroupType', 'Owner.RoleNames' as 'Name', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}',count() as 'count'; wsrOPPTY = union wsrOWN,wsrDIR; wsrOPPTY = group wsrOPPTY by all; wsrfctamt = foreach wsrOPPTY generate  sum('sum_${Variables.Opportunity_Amount.fieldName}') as  'sum_forecast',  sum('count') as 'count'; allfct = union fctamt,wsrfctamt;allfct = group allfct by all; allfct = foreach allfct generate  sum('sum_forecast') as  'sum_${Variables.Opportunity_Amount.fieldName}';\nsrc1 = load \"${App.EdgeMarts.quota.Alias}\";\nsrc1 = filter src1 by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day')  in  [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];\nown1 = filter src1 by 'User.Role.DeveloperName' in {{ results(mgr_get_manager,'Role.DeveloperName') }} or 'User.Role.DeveloperName' in {{ selection(filter_role) }} ;\nown1 = group own1 by all;\nown1 = foreach own1 generate sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}';\ndir1 = filter src1 by 'User.RoleNames' in {{ results(mgr_get_manager,'Role.DeveloperName') }};\ndir1 = group dir1 by all;\ndir1 = foreach dir1 generate sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}';\noppty1 = union own1,dir1;\noppty1 = group oppty1 by all;\noppty1 = foreach oppty1 generate sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}' ;\ntargetAm = cogroup allfct by all, oppty1 by all;\ntargetAm = foreach targetAm generate  sum(allfct['sum_${Variables.Opportunity_Amount.fieldName}'])/sum(oppty1['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_quota_attainment';",
            "groups" : [ ],
            "filters" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "singlerequired",
        "start" : [ ],
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "scatter"
        }
      },
      "mgr_Name" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.user.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "count",
  "*"
  ]
  ],
            "groups" : [
  "Name"
  ],
            "filters" : [
  [
  "AllManagers.Name",
  "{{ selection(mgr_get_manager) }}"
  ]
  ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "start" : [ ],
        "type" : "aggregate",
        "useGlobal" : false,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "attainment_Quota_Forecast" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "sum",
  "quota_attainment"
  ]
  ],
            "pigql" : "src = load \"${App.EdgeMarts.opportunity.Alias}\";\nsrc = filter src by 'IsWon' == \"true\";\nsrc = filter src by '${Variables.Bookings.fieldName}' in {{ selection(Type_26) }};\nsrc = filter src by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in  [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];\nown = filter src by 'Owner.Role.DeveloperName' in {{ results(mgr_get_manager,'Role.DeveloperName') }} or 'Owner.Role.DeveloperName' in {{ selection(filter_role) }};\nown = group own by all;\nown = foreach own generate sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}';\ndir = filter src by 'Owner.RoleNames' in {{ results(mgr_get_manager,'Role.DeveloperName') }};\ndir = group dir by all;\ndir = foreach dir generate sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}';\noppty = union own,dir;\noppty = group oppty by all;\noppty = foreach oppty generate sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}' , 0 as 'sum_quota';\nsrc1 = load \"${App.EdgeMarts.quota.Alias}\";\nsrc1 = filter src1 by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day')  in  [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];\nown1 = filter src1 by 'User.Role.DeveloperName' in {{ results(mgr_get_manager,'Role.DeveloperName') }} or 'User.Role.DeveloperName' in {{ selection(filter_role) }} ;\nown1 = group own1 by all;\nown1 = foreach own1 generate sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}';\ndir1 = filter src1 by 'User.RoleNames' in {{ results(mgr_get_manager,'Role.DeveloperName') }};\ndir1 = group dir1 by all;\ndir1 = foreach dir1 generate sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}';\noppty1 = union own1,dir1;\noppty1 = group oppty1 by all;\noppty1 = foreach oppty1 generate 0 as 'sum_${Variables.Opportunity_Amount.fieldName}' ,sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_quota';\ntargetAm = union oppty, oppty1;\ntargetAm = group targetAm by all;\ntargetAm = foreach targetAm generate sum('sum_${Variables.Opportunity_Amount.fieldName}')/sum('sum_quota') as 'sum_quota_attainment';\ntargetAm = group targetAm by all;\ntargetAm = foreach targetAm generate  (case when sum('sum_quota_attainment')  > 0 then  sum('sum_quota_attainment')  else 0 end) as 'sum_quota_attainment';",
            "groups" : [ ],
            "filters" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "singlerequired",
        "start" : [ ],
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "scatter"
        }
      },
      "mgr_get_manager" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.user.Alias}"
          }
  ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "count",
  "*"
  ]
  ],
            "groups" : [
  "Role.DeveloperName"
  ],
            "filters" : [
  [
  "ParentRole.DeveloperName",
  "{{ selection(filter_role) }}"
  ]
  ]
          },
          "version" : -1.0
        },
        "selectMode" : "multi",
        "start" : [ ],
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "lens_23" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "values" : [
  "CloseDate",
  "Name",
  "Owner.Name",
  "${Variables.Opportunity_Amount.fieldName}"
  ],
            "filters" : [
  [
  "ForecastCategoryName",
  "{{ selection(step_type_of_forecast) }}",
  "in"
  ],
  [
  "IsClosed",
  [
  "false"
  ],
  "in"
  ],
  [
  "Owner.Name",
  "{{results(mgr_get_list)}}",
  "in"
  ],
  [
  "CloseDate",
  [
  "{{ value(field(selection(step_grouplist3),'Current')) }}"
  ],
  null
  ]
  ],
            "order" : [
  [
  "${Variables.Opportunity_Amount.fieldName}",
  {
                  "ascending" : false
                }
  ]
  ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "grain",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "valuestable"
        }
      },
      "mgr_get_list" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.user.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "sum",
  "${Variables.Opportunity_Amount.fieldName}"
  ]
  ],
            "pigql" : "src = load \"${App.EdgeMarts.user.Alias}\";own = filter src by 'Role.DeveloperName' in {{ results(mgr_get_manager,'Role.DeveloperName') }} or 'Role.DeveloperName' in {{ selection(filter_role) }};own = group own by('RoleNames' , 'Name');own = foreach own generate \"S\" as 'GroupType', 'RoleNames' as 'RoleNames' ,'Name' as 'Name', 0 as 'sum_${Variables.Opportunity_Amount.fieldName}';dir = filter src by 'RoleNames' in {{ results(mgr_get_manager,'Role.DeveloperName') }};dir = group dir by ('RoleNames' , 'Name');dir = foreach dir generate \"D\" as 'GroupType','RoleNames' as 'RoleNames' , 'Name' as 'Name', 0 as 'sum_${Variables.Opportunity_Amount.fieldName}';oppty = union own,dir;oppty = group oppty by  'Name';oppty = foreach oppty generate 'Name' as 'Owner.Name', sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}';",
            "groups" : [
  "Owner.Name"
  ],
            "filters" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : false,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "step_need_to_close" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "sum",
  "need_to_close"
  ]
  ],
            "pigql" : "src = load \"${App.EdgeMarts.opportunity.Alias}\";\nsrc = filter src by 'IsWon' == \"true\";\nsrc = filter src by '${Variables.Bookings.fieldName}' in {{ selection(Type_26) }};\nsrc = filter src by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in  [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];\nown = filter src by 'Owner.Role.DeveloperName' in {{ results(mgr_get_manager,'Role.DeveloperName') }} or 'Owner.Role.DeveloperName' in {{ selection(filter_role) }};\nown = group own by all;\nown = foreach own generate sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}';\ndir = filter src by 'Owner.RoleNames' in {{ results(mgr_get_manager,'Role.DeveloperName') }};\ndir = group dir by all;\ndir = foreach dir generate sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}';\noppty = union own,dir;\noppty = group oppty by all;\noppty = foreach oppty generate sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}' , 0 as 'sum_quota';\nsrc1 = load \"${App.EdgeMarts.quota.Alias}\";\nsrc1 = filter src1 by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day')  in  [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];\nown1 = filter src1 by 'User.Role.DeveloperName' in {{ results(mgr_get_manager,'Role.DeveloperName') }} or 'User.Role.DeveloperName' in {{ selection(filter_role) }} ;\nown1 = group own1 by all;\nown1 = foreach own1 generate sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}';\ndir1 = filter src1 by 'User.RoleNames' in {{ results(mgr_get_manager,'Role.DeveloperName') }};\ndir1 = group dir1 by all;\ndir1 = foreach dir1 generate sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}';\noppty1 = union own1,dir1;\noppty1 = group oppty1 by all;\noppty1 = foreach oppty1 generate 0 as 'sum_${Variables.Opportunity_Amount.fieldName}' ,sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_quota';\ntargetAm = union oppty, oppty1;\ntargetAm = group targetAm by all;\ntargetAm = foreach targetAm generate sum('sum_quota')-sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_need_to_close';\ntargetAm = group targetAm by all;\ntargetAm = foreach targetAm generate  (case when sum('sum_need_to_close')  > 0 then  sum('sum_need_to_close')  else 0 end) as 'sum_need_to_close';",
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true
      },
      "CloseDate_Year_CloseDate_Month_ForecastCategory_21" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "sum",
  "${Variables.Opportunity_Amount.fieldName}"
  ]
  ],
            "groups" : [
  "{{value(selection(step_hbar_time)) }}",
  "ForecastCategoryName"
  ],
            "filters" : [
  [
  "ForecastCategoryName",
  "{{ selection(step_type_of_forecast) }}",
  "in"
  ],
  [
  "IsClosed",
  [
  "false"
  ],
  "in"
  ],
  [
  "CloseDate",
  [
  "{{ value(field(selection(step_grouplist3),'Current')) }}"
  ]
  ],
  [
  "Owner.Name",
  "{{results(mgr_get_list)}}",
  "in"
  ],
  [
  "${Variables.Bookings.fieldName}",
  "{{selection(Type_26)}}"
  ]
  ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "stackvbar"
        }
      },
      "_PIGQL_step_4" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "avg",
  "${Variables.Opportunity_Amount.fieldName}"
  ],
  [
  "sum",
  "${Variables.Opportunity_Amount.fieldName}"
  ],
  [
  "count",
  "*"
  ]
  ],
            "pigql" : "SRC = load \"${App.EdgeMarts.opportunity.Alias}\";SRC = filter SRC by ('IsClosed' == \"false\" and  'ForecastCategoryName' in {{ selection(step_type_of_forecast) }} );SRC = filter SRC by '${Variables.Bookings.fieldName}' in {{selection(Type_26)}}; SRC = filter SRC by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in  [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}]; OWN = filter SRC by 'Owner.Name' in {{results(mgr_get_list)}}; OWN = group OWN by all; OWN = foreach OWN generate sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}',count() as 'count',sum('${Variables.Opportunity_Amount.fieldName}')/count() as 'avg_${Variables.Opportunity_Amount.fieldName}';",
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : false
      },
      "filter_role" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.user.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "count",
  "*"
  ]
  ],
            "pigql" : "q = load \"${App.EdgeMarts.user.Alias}\"; q = group q by 'Role.DeveloperName'; q = foreach q generate 'Role.DeveloperName' as 'Role.DeveloperName';",
            "groups" : [
  "Role.DeveloperName"
  ]
          },
          "version" : -1.0
        },
        "selectMode" : "singlerequired",
        "start" : [
  "!{user.rolename}"
  ],
        "type" : "aggregate",
        "useGlobal" : false,
        "visualizationParameters" : {
          "visualizationType" : "hbar"
        }
      },
      "_PIGQL_step_5" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "sum",
  "forecast"
  ],
  [
  "avg",
  "forecast"
  ],
  [
  "count",
  "*"
  ]
  ],
            "pigql" : "SRC = load \"${App.EdgeMarts.opportunity.Alias}\"; SRC = filter SRC by ('IsClosed' == \"false\" and  'ForecastCategoryName' in {{ selection(step_type_of_forecast) }}) ; SRC = filter SRC by '${Variables.Bookings.fieldName}' in {{selection(Type_26)}}; SRC = filter SRC by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in  [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}]; OWN = filter SRC by 'Owner.Name' in {{results(mgr_get_list)}}; OWN = group OWN by all; OWN = foreach OWN generate sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}',count() as 'count'; wsr = load \"${App.EdgeMarts.opportunity.Alias}\"; wsr = filter wsr by 'IsWon' ==\"true\" ; wsr = filter wsr by '${Variables.Bookings.fieldName}' in {{selection(Type_26)}}; wsr = filter wsr by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in  [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}]; wsrOWN = filter wsr by 'Owner.Name' in {{results(mgr_get_list)}}; wsrOWN = group wsrOWN by all; wsrOWN = foreach wsrOWN generate sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}',count() as 'count'; allfct = union OWN,wsrOWN;allfct = group allfct by all; debug1 = foreach allfct generate  sum('sum_${Variables.Opportunity_Amount.fieldName}') as  'sum_forecast',  sum('count') as 'count',sum('sum_${Variables.Opportunity_Amount.fieldName}')/sum('count') as 'avg_forecast';",
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : false
      },
      "won_previous_period" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "sum",
  "${Variables.Opportunity_Amount.fieldName}"
  ]
  ],
            "pigql" : "a = load \"${App.EdgeMarts.opportunity.Alias}\";a = filter a by 'IsWon' == \"true\";a = filter a by 'Owner.Name' in {{results(mgr_get_list)}};a = filter a by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in  [{{ no_quote(value(field(selection(step_grouplist3), 'Prior_pigql'))) }}];a = group a by all;a = foreach a generate sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}';",
            "groups" : [ ],
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : false
      },
      "step_2" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "sum",
  "${Variables.Opportunity_Amount.fieldName}"
  ]
  ],
            "filters" : [
  [
  "IsWon",
  [
  "true"
  ]
  ],
  [
  "CloseDate",
  [
  "{{ value(field(selection(step_grouplist3),'Current')) }}"
  ]
  ],
  [
  "${Variables.Bookings.fieldName}",
  "{{selection(Type_26)}}"
  ],
  [
  "Owner.Name",
  "{{ results(mgr_get_list) }}"
  ]
  ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : false
      },
      "step_grouplist3" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "dimensions" : [
  "CloseDate"
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "selectMode" : "singlerequired",
        "start" : [
  [
  {
              "Current" : [
  [
  "${Constants.Fiscal_Prefix}quarter",
  0
  ],
  [
  "${Constants.Fiscal_Prefix}quarter",
  0
  ]
  ],
              "Current_pigql" : "\"current ${Constants.Fiscal_Prefix}quarter\"..\"current ${Constants.Fiscal_Prefix}quarter\"",
              "Next" : [
  [
  "${Constants.Fiscal_Prefix}quarter",
  1
  ],
  [
  "${Constants.Fiscal_Prefix}quarter",
  1
  ]
  ],
              "Prior_pigql" : "\"current ${Constants.Fiscal_Prefix}quarter -1 year\"..\"current ${Constants.Fiscal_Prefix}quarter -1 year\""
            }
  ]
  ],
        "type" : "static",
        "useGlobal" : false,
        "values" : [
  {
            "display" : "This Month",
            "value" : [
  {
                "Current" : [
  [
  "month",
  0
  ],
  [
  "month",
  0
  ]
  ],
                "Current_pigql" : "\"current month\"..\"current month\"",
                "Next" : [
  [
  "month",
  1
  ],
  [
  "month",
  1
  ]
  ],
                "Prior_pigql" : "\"current month -1 year\"..\"current month -1 year\""
              }
  ]
          },
  {
            "display" : "This Quarter",
            "value" : [
  {
                "Current" : [
  [
  "${Constants.Fiscal_Prefix}quarter",
  0
  ],
  [
  "${Constants.Fiscal_Prefix}quarter",
  0
  ]
  ],
                "Current_pigql" : "\"current ${Constants.Fiscal_Prefix}quarter\"..\"current ${Constants.Fiscal_Prefix}quarter\"",
                "Next" : [
  [
  "${Constants.Fiscal_Prefix}quarter",
  1
  ],
  [
  "${Constants.Fiscal_Prefix}quarter",
  1
  ]
  ],
                "Prior_pigql" : "\"current ${Constants.Fiscal_Prefix}quarter -1 year\"..\"current ${Constants.Fiscal_Prefix}quarter -1 year\""
              }
  ]
          },
  {
            "display" : "This Year",
            "value" : [
  {
                "Current" : [
  [
  "${Constants.Fiscal_Prefix}year",
  0
  ],
  [
  "${Constants.Fiscal_Prefix}year",
  0
  ]
  ],
                "Current_pigql" : "\"current ${Constants.Fiscal_Prefix}year\"..\"current ${Constants.Fiscal_Prefix}year\"",
                "Next" : [
  [
  "${Constants.Fiscal_Prefix}year",
  1
  ],
  [
  "${Constants.Fiscal_Prefix}year",
  1
  ]
  ],
                "Prior_pigql" : "\"current ${Constants.Fiscal_Prefix}year -1 year\"..\"current ${Constants.Fiscal_Prefix}year -1 year\""
              }
  ]
          },
  {
            "display" : "Next Month",
            "value" : [
  {
                "Current" : [
  [
  "month",
  1
  ],
  [
  "month",
  1
  ]
  ],
                "Current_pigql" : "\"1 month ahead\"..\"1 month ahead\"",
                "Next" : [
  [
  "month",
  2
  ],
  [
  "month",
  2
  ]
  ],
                "Prior_pigql" : "\"1 month ahead -1 year\"..\"1 month ahead -1 year\""
              }
  ]
          },
  {
            "display" : "Next Quarter",
            "value" : [
  {
                "Current" : [
  [
  "${Constants.Fiscal_Prefix}quarter",
  1
  ],
  [
  "${Constants.Fiscal_Prefix}quarter",
  1
  ]
  ],
                "Current_pigql" : "\"1 ${Constants.Fiscal_Prefix}quarter ahead\"..\"1 ${Constants.Fiscal_Prefix}quarter ahead\"",
                "Next" : [
  [
  "${Constants.Fiscal_Prefix}quarter",
  2
  ],
  [
  "${Constants.Fiscal_Prefix}quarter",
  2
  ]
  ],
                "Prior_pigql" : "\"1 ${Constants.Fiscal_Prefix}quarter ahead -1 year\"..\"1 ${Constants.Fiscal_Prefix}quarter ahead -1 year\""
              }
  ]
          },
  {
            "display" : "Next Year",
            "value" : [
  {
                "Current" : [
  [
  "${Constants.Fiscal_Prefix}year",
  1
  ],
  [
  "${Constants.Fiscal_Prefix}year",
  1
  ]
  ],
                "Current_pigql" : "\"1 ${Constants.Fiscal_Prefix}year ahead\"..\"1 ${Constants.Fiscal_Prefix}year ahead\"",
                "Next" : [
  [
  "${Constants.Fiscal_Prefix}year",
  2
  ],
  [
  "${Constants.Fiscal_Prefix}year",
  2
  ]
  ],
                "Prior_pigql" : "\"1 ${Constants.Fiscal_Prefix}year ahead -1 year\"..\"1 ${Constants.Fiscal_Prefix}year ahead -1 year\""
              }
  ]
          }
  ]
      },
      "step_hbar_time" : {
        "datasets" : [ ],
        "dimensions" : [ ],
        "isFacet" : false,
        "isGlobal" : false,
        "selectMode" : "singlerequired",
        "start" : [
  [
  [
  "CloseDate_Year",
  "CloseDate_Week"
  ]
  ]
  ],
        "type" : "static",
        "useGlobal" : false,
        "values" : [
  {
            "display" : "Month",
            "value" : [
  [
  "CloseDate_Year",
  "CloseDate_Month"
  ]
  ]
          },
  {
            "display" : "Week",
            "value" : [
  [
  "CloseDate_Year",
  "CloseDate_Week"
  ]
  ]
          },
  {
            "display" : "Day",
            "value" : [
  [
  "CloseDate_Year",
  "CloseDate_Month",
  "CloseDate_Day"
  ]
  ]
          }
  ]
      },
      "forecast_to_close_3" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "sum",
  "Quota_Attainment"
  ],
  [
  "sum",
  "ForecastToQuota"
  ]
  ],
            "pigql" : "srcUsr = load \"${App.EdgeMarts.user.Alias}\";usr_filtered = filter srcUsr by 'ParentRole.DeveloperName' in {{ selection(filter_role) }};srcOppty = load \"${App.EdgeMarts.opportunity.Alias}\";srcOppty = filter srcOppty by 'IsWon' == \"true\";srcOppty = filter srcOppty by '${Variables.Bookings.fieldName}' in {{ selection(Type_26) }};srcOppty = filter srcOppty by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];d1 = group usr_filtered by 'Id';d1 = foreach d1 generate 'Id';d2 = group srcUsr by 'Id';d2 = foreach d2 generate 'Id';d3 = union d1, d2;d4 = group usr_filtered by 'Role.DeveloperName';d4 = foreach d4 generate 'Role.DeveloperName';repsOppty = filter srcOppty by 'Owner.Role.DeveloperName' in {{ selection(filter_role) }};repsOppty = group repsOppty by 'OwnerId';repsOppty = foreach repsOppty generate 'OwnerId', first('Owner.Name') as 'Group By', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}';z1Oppty = group repsOppty by 'OwnerId' left, d3 by 'Id';z1Oppty = foreach z1Oppty generate first(repsOppty['Group By']) as 'Group By', sum(repsOppty['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_${Variables.Opportunity_Amount.fieldName}';ownOppty = filter srcOppty by 'Owner.Role.DeveloperName' in {{ results(mgr_get_manager,'Role.DeveloperName') }} or 'Owner.Role.DeveloperName' in {{ selection(filter_role) }};ownOppty = group ownOppty by 'Owner.Role.DeveloperName';ownOppty = foreach ownOppty generate \"S\" as 'GroupType', 'Owner.Role.DeveloperName' as 'Group By', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}';dirOppty = filter srcOppty by 'Owner.RoleNames' in {{ results(mgr_get_manager,'Role.DeveloperName') }};dirOppty = group dirOppty by 'Owner.RoleNames';dirOppty = foreach dirOppty generate \"D\" as 'GroupType', 'Owner.RoleNames' as 'Group By', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}';oppty = union ownOppty,dirOppty;z2Oppty = group oppty by 'Group By', d4 by 'Role.DeveloperName';z2Oppty = foreach z2Oppty generate oppty['Group By'] as 'Group By', sum(oppty['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_${Variables.Opportunity_Amount.fieldName}';z3Oppty = union z1Oppty, z2Oppty;srcQuot = load \"${App.EdgeMarts.quota.Alias}\";srcQuot = filter srcQuot by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day')  in [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];repsQuot = filter srcQuot by 'User.Role.DeveloperName' in {{ selection(filter_role) }};repsQuot = group repsQuot by 'User.Id';repsQuot = foreach repsQuot generate 'User.Id', first('User.Name') as 'Group By', sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}';z1Quot = group repsQuot by 'User.Id' left, d3 by 'Id';z1Quot = foreach z1Quot generate first(repsQuot['Group By']) as 'Group By', sum(repsQuot['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_${Variables.Opportunity_Amount.fieldName}';ownQuot = filter srcQuot by 'User.Role.DeveloperName' in {{ results(mgr_get_manager,'Role.DeveloperName') }} or 'User.Role.DeveloperName' in {{ selection(filter_role) }} ;ownQuot = group ownQuot by 'User.Role.DeveloperName';ownQuot = foreach ownQuot generate \"S\" as 'GroupType', 'User.Role.DeveloperName' as 'Group By', sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}';dirQuot = filter srcQuot by 'User.RoleNames' in {{ results(mgr_get_manager,'Role.DeveloperName') }};dirQuot = group dirQuot by 'User.RoleNames';dirQuot = foreach dirQuot generate \"D\" as 'GroupType', 'User.RoleNames' as 'Group By', sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}';quota = union ownQuot, dirQuot;z2Quot = group quota by 'Group By', d4 by 'Role.DeveloperName';z2Quot = foreach z2Quot generate quota['Group By'] as 'Group By', sum(quota['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_${Variables.Opportunity_Amount.fieldName}';z3Quot = union z1Quot, z2Quot;targetAm = cogroup z3Oppty by 'Group By', z3Quot by 'Group By';targetAm = foreach targetAm generate z3Oppty['Group By'] as 'Group By', sum(z3Oppty['sum_${Variables.Opportunity_Amount.fieldName}'])/sum(z3Quot['sum_${Variables.Opportunity_Amount.fieldName}']) as 'quotaAttainment',0 as 'forecastToQuota';srcUsr = load \"${App.EdgeMarts.user.Alias}\";usr_filtered = filter srcUsr by 'ParentRole.DeveloperName' in {{ selection(filter_role) }};srcOppty = load \"${App.EdgeMarts.opportunity.Alias}\";srcOppty = filter srcOppty by ('IsClosed' == \"false\" and  'ForecastCategoryName' in {{ selection(step_type_of_forecast) }});srcOppty = filter srcOppty by '${Variables.Bookings.fieldName}' in {{ selection(Type_26) }};srcOppty = filter srcOppty by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];d1 = group usr_filtered by 'Id';d1 = foreach d1 generate 'Id';d2 = group srcUsr by 'Id';d2 = foreach d2 generate 'Id';d3 = union d1, d2;d4 = group usr_filtered by 'Role.DeveloperName';d4 = foreach d4 generate 'Role.DeveloperName';repsOppty = filter srcOppty by 'Owner.Role.DeveloperName' in {{ selection(filter_role) }};repsOppty = group repsOppty by 'OwnerId';repsOppty = foreach repsOppty generate 'OwnerId', first('Owner.Name') as 'Group By', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}';z1Oppty = group repsOppty by 'OwnerId' left, d3 by 'Id';z1Oppty = foreach z1Oppty generate first(repsOppty['Group By']) as 'Group By', sum(repsOppty['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_${Variables.Opportunity_Amount.fieldName}';ownOppty = filter srcOppty by 'Owner.Role.DeveloperName' in {{ results(mgr_get_manager,'Role.DeveloperName') }} or 'Owner.Role.DeveloperName' in {{ selection(filter_role) }};ownOppty = group ownOppty by 'Owner.Role.DeveloperName';ownOppty = foreach ownOppty generate \"S\" as 'GroupType', 'Owner.Role.DeveloperName' as 'Group By', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}';dirOppty = filter srcOppty by 'Owner.RoleNames' in {{ results(mgr_get_manager,'Role.DeveloperName') }};dirOppty = group dirOppty by 'Owner.RoleNames';dirOppty = foreach dirOppty generate \"D\" as 'GroupType', 'Owner.RoleNames' as 'Group By', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}';oppty = union ownOppty,dirOppty;z2Oppty = group oppty by 'Group By', d4 by 'Role.DeveloperName';z2Oppty = foreach z2Oppty generate oppty['Group By'] as 'Group By', sum(oppty['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_${Variables.Opportunity_Amount.fieldName}';z3Oppty1 = union z1Oppty, z2Oppty, z3Oppty;z3Oppty4 = group z3Oppty1 by 'Group By';z3Oppty4 = foreach z3Oppty4 generate 'Group By' as 'Group By',sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}';srcQuot = load \"${App.EdgeMarts.quota.Alias}\";srcQuot = filter srcQuot by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day')  in [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];repsQuot = filter srcQuot by 'User.Role.DeveloperName' in {{ selection(filter_role) }};repsQuot = group repsQuot by 'User.Id';repsQuot = foreach repsQuot generate 'User.Id', first('User.Name') as 'Group By', sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}';z1Quot = group repsQuot by 'User.Id' left, d3 by 'Id';z1Quot = foreach z1Quot generate first(repsQuot['Group By']) as 'Group By', sum(repsQuot['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_${Variables.Opportunity_Amount.fieldName}';ownQuot = filter srcQuot by 'User.Role.DeveloperName' in {{ results(mgr_get_manager,'Role.DeveloperName') }} or 'User.Role.DeveloperName' in {{ selection(filter_role) }} ;ownQuot = group ownQuot by 'User.Role.DeveloperName';ownQuot = foreach ownQuot generate \"S\" as 'GroupType', 'User.Role.DeveloperName' as 'Group By', sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}';dirQuot = filter srcQuot by 'User.RoleNames' in {{ results(mgr_get_manager,'Role.DeveloperName') }};dirQuot = group dirQuot by 'User.RoleNames';dirQuot = foreach dirQuot generate \"D\" as 'GroupType', 'User.RoleNames' as 'Group By', sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}';quota = union ownQuot, dirQuot;z2Quot = group quota by 'Group By', d4 by 'Role.DeveloperName';z2Quot = foreach z2Quot generate quota['Group By'] as 'Group By', sum(quota['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_${Variables.Opportunity_Amount.fieldName}';z3Quot = union z1Quot, z2Quot;targetAmf = cogroup z3Oppty4 by 'Group By', z3Quot by 'Group By';targetAmf = foreach targetAmf generate z3Oppty4['Group By'] as 'Group By', 0 as 'quotaAttainment' ,sum(z3Oppty4['sum_${Variables.Opportunity_Amount.fieldName}'])/sum(z3Quot['sum_${Variables.Opportunity_Amount.fieldName}']) as 'forecastToQuota';splot = union targetAm,targetAmf;splot = group splot by 'Group By';splot = foreach splot generate 'Group By' as 'Group By',sum('quotaAttainment') as 'sum_Quota_Attainment',sum('forecastToQuota')*100 as 'sum_ForecastToQuota';",
            "groups" : [
  "Group By"
  ],
            "filters" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "singlerequired",
        "start" : [ ],
        "type" : "aggregate",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "scatter"
        }
      },
      "lens_19" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : true,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "values" : [
  "CloseDate",
  "Name",
  "Owner.Name",
  "${Variables.Opportunity_Amount.fieldName}"
  ],
            "filters" : [
  [
  "ForecastCategoryName",
  "{{ selection(step_type_of_forecast) }}",
  "in"
  ],
  [
  "IsClosed",
  [
  "false"
  ],
  "in"
  ],
  [
  "CloseDate",
  [
  "{{ value(field(selection(step_grouplist3),'Next')) }}"
  ],
  null
  ],
  [
  "Owner.Name",
  "{{results(mgr_get_list)}}",
  "in"
  ]
  ],
            "order" : [
  [
  "${Variables.Opportunity_Amount.fieldName}",
  {
                  "ascending" : true
                }
  ]
  ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "grain",
        "useGlobal" : true,
        "visualizationParameters" : {
          "visualizationType" : "valuestable"
        }
      },
      "step_need_to_find" : {
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "query" : {
          "query" : {
            "measures" : [
  [
  "sum",
  "need_to_find"
  ]
  ],
            "pigql" : "SRC = load \"${App.EdgeMarts.opportunity.Alias}\"; SRC = filter SRC by ('IsClosed' == \"false\" and  'ForecastCategoryName' in {{ selection(step_type_of_forecast) }}) ; SRC = filter SRC by '${Variables.Bookings.fieldName}' in {{selection(Type_26)}}; SRC = filter SRC by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in  [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}]; OWN = filter SRC by 'Owner.Role.DeveloperName' in {{results(mgr_get_manager,'Role.DeveloperName')}} or 'Owner.Role.DeveloperName' in {{selection(filter_role)}}; OWN = group OWN by 'Owner.Name'; OWN = foreach OWN generate \"S\" as 'GroupType', 'Owner.Name' as 'Name', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}',count() as 'count'; DIR = filter SRC by 'Owner.RoleNames' in {{results(mgr_get_manager,'Role.DeveloperName')}}; DIR = group DIR by 'Owner.RoleNames'; DIR = foreach DIR generate \"D\" as 'GroupType', 'Owner.RoleNames' as 'Name', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}',count() as 'count'; OPPTY = union OWN,DIR; OPPTY = group OPPTY by all; fctamt = foreach OPPTY generate  sum('sum_${Variables.Opportunity_Amount.fieldName}') as  'sum_forecast',  sum('count') as 'count'; wsr = load \"${App.EdgeMarts.opportunity.Alias}\"; wsr = filter wsr by 'IsWon' ==\"true\" ; wsr = filter wsr by '${Variables.Bookings.fieldName}' in {{selection(Type_26)}}; wsr = filter wsr by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in  [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}]; wsrOWN = filter wsr by 'Owner.Role.DeveloperName' in {{results(mgr_get_manager,'Role.DeveloperName')}} or 'Owner.Role.DeveloperName' in {{selection(filter_role)}}; wsrOWN = group wsrOWN by 'Owner.Name'; wsrOWN = foreach wsrOWN generate \"S\" as 'GroupType', 'Owner.Name' as 'Name', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}',count() as 'count'; wsrDIR = filter wsr by 'Owner.RoleNames' in {{results(mgr_get_manager,'Role.DeveloperName')}}; wsrDIR = group wsrDIR by 'Owner.RoleNames'; wsrDIR = foreach wsrDIR generate \"D\" as 'GroupType', 'Owner.RoleNames' as 'Name', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}',count() as 'count'; wsrOPPTY = union wsrOWN,wsrDIR; wsrOPPTY = group wsrOPPTY by all; wsrfctamt = foreach wsrOPPTY generate  sum('sum_${Variables.Opportunity_Amount.fieldName}') as  'sum_forecast',  sum('count') as 'count'; allfct = union fctamt,wsrfctamt;allfct = group allfct by all; allfct = foreach allfct generate  sum('sum_forecast') as  'sum_${Variables.Opportunity_Amount.fieldName}';\nsrc1 = load \"${App.EdgeMarts.quota.Alias}\";\nsrc1 = filter src1 by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day')  in  [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];\nown1 = filter src1 by 'User.Role.DeveloperName' in {{ results(mgr_get_manager,'Role.DeveloperName') }} or 'User.Role.DeveloperName' in {{ selection(filter_role) }} ;\nown1 = group own1 by all;\nown1 = foreach own1 generate sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}';\ndir1 = filter src1 by 'User.RoleNames' in {{ results(mgr_get_manager,'Role.DeveloperName') }};\ndir1 = group dir1 by all;\ndir1 = foreach dir1 generate sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}';\noppty1 = union own1,dir1;\noppty1 = group oppty1 by all;\noppty1 = foreach oppty1 generate sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}' ;\ntargetAm = cogroup allfct by all full, oppty1 by all;\ntargetAm = foreach targetAm generate coalesce(sum(oppty1['sum_${Variables.Opportunity_Amount.fieldName}']),0) - coalesce(sum(allfct['sum_${Variables.Opportunity_Amount.fieldName}']),0) as 'sum_need_to_find';targetAm = group targetAm by all; targetAm = foreach targetAm generate  (case when sum('sum_need_to_find')  > 0 then  sum('sum_need_to_find')  else 0 end) as 'sum_need_to_find';",
            "order" : [ ]
          },
          "version" : -1.0
        },
        "selectMode" : "single",
        "type" : "aggregate",
        "useGlobal" : true
      },
      "compare_41" : {
        "columns" : [
  {
            "header" : "Won",
            "query" : {
              "query" : {
                "measures" : [
  [
  "sum",
  "${Variables.Opportunity_Amount.fieldName}"
  ]
  ],
                "pigql" : "srcUsr = load \"${App.EdgeMarts.user.Alias}\";\nusr_filtered = filter srcUsr by 'ParentRole.DeveloperName' in {{ selection(filter_role) }};\nsrcOppty = load \"${App.EdgeMarts.opportunity.Alias}\";\nsrcOppty = filter srcOppty by 'IsWon' == \"true\";\nsrcOppty = filter srcOppty by '${Variables.Bookings.fieldName}' in {{ selection(Type_26) }};\nsrcOppty = filter srcOppty by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];\nreps = filter srcOppty by 'Owner.Role.DeveloperName' in {{ selection(filter_role) }};\nreps = group reps by 'OwnerId';\nreps = foreach reps generate 'OwnerId', first('Owner.Name') as 'Group By', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}' , avg('${Variables.Opportunity_Amount.fieldName}') as 'avg_${Variables.Opportunity_Amount.fieldName}',count() as 'count';\nd1 = group usr_filtered by 'Id';\nd1 = foreach d1 generate 'Id';\nd2 = group srcUsr by 'Id';\nd2 = foreach d2 generate 'Id';\nd3 = union d1, d2;\nz1 = group reps by 'OwnerId' left, d3 by 'Id';\nz1 = foreach z1 generate first(reps['Group By']) as 'Group By', sum(reps['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_${Variables.Opportunity_Amount.fieldName}', sum(reps['avg_${Variables.Opportunity_Amount.fieldName}']) as 'avg_${Variables.Opportunity_Amount.fieldName}', sum(reps['count']) as 'count';\nown = filter srcOppty by 'Owner.Role.DeveloperName' in {{ results(mgr_get_manager,'Role.DeveloperName') }} or 'Owner.Role.DeveloperName' in {{ selection(filter_role) }};\nown = group own by 'Owner.Role.DeveloperName';\nown = foreach own generate 'Owner.Role.DeveloperName' as 'Group By', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}', avg('${Variables.Opportunity_Amount.fieldName}') as 'avg_${Variables.Opportunity_Amount.fieldName}',count() as 'count';\ndir = filter srcOppty by 'Owner.RoleNames' in {{ results(mgr_get_manager,'Role.DeveloperName') }};\ndir = group dir by 'Owner.RoleNames';\ndir = foreach dir generate 'Owner.RoleNames' as 'Group By', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}', avg('${Variables.Opportunity_Amount.fieldName}') as 'avg_${Variables.Opportunity_Amount.fieldName}',count() as 'count';\noppty = union own,dir;\noppty = group oppty by 'Group By';\noppty = foreach oppty generate 'Group By' as 'Group By', sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}', sum('avg_${Variables.Opportunity_Amount.fieldName}') as 'avg_${Variables.Opportunity_Amount.fieldName}', sum('count') as 'count';\nd4 = group usr_filtered by 'Role.DeveloperName';\nd4 = foreach d4 generate 'Role.DeveloperName';\nz2 = group oppty by 'Group By', d4 by 'Role.DeveloperName';\nz2 = foreach z2 generate oppty['Group By'] as 'Group By', sum(oppty['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_${Variables.Opportunity_Amount.fieldName}', sum(oppty['sum_${Variables.Opportunity_Amount.fieldName}'])/sum(oppty['count']) as 'avg_${Variables.Opportunity_Amount.fieldName}', sum(oppty['count']) as 'count';\nz3 = union z1, z2;z3 = group z3 by 'Group By';compare41a = foreach z3 generate 'Group By' as 'Group By', sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}'; ",
                "disableCaching" : true,
                "groups" : [
  "Group By"
  ],
                "filters" : [ ]
              },
              "version" : -1.0
            }
          },
  {
            "header" : "Commit",
            "query" : {
              "query" : {
                "measures" : [
  [
  "sum",
  "${Variables.Opportunity_Amount.fieldName}"
  ]
  ],
                "pigql" : "srcUsr = load \"${App.EdgeMarts.user.Alias}\";\nusr_filtered = filter srcUsr by 'ParentRole.DeveloperName' in {{ selection(filter_role) }};\nsrcOppty = load \"${App.EdgeMarts.opportunity.Alias}\";\n;srcOppty = filter srcOppty by 'IsClosed' == \"false\"; srcOppty = filter srcOppty by 'ForecastCategory' == \"Forecast\";srcOppty = filter srcOppty by 'ForecastCategoryName' in  {{selection(step_type_of_forecast)}};\nsrcOppty = filter srcOppty by '${Variables.Bookings.fieldName}' in {{ selection(Type_26) }};\nsrcOppty = filter srcOppty by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];\nreps = filter srcOppty by 'Owner.Role.DeveloperName' in {{ selection(filter_role) }};\nreps = group reps by 'OwnerId';\nreps = foreach reps generate 'OwnerId', first('Owner.Name') as 'Group By', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}' , avg('${Variables.Opportunity_Amount.fieldName}') as 'avg_${Variables.Opportunity_Amount.fieldName}',count() as 'count';\nd1 = group usr_filtered by 'Id';\nd1 = foreach d1 generate 'Id';\nd2 = group srcUsr by 'Id';\nd2 = foreach d2 generate 'Id';\nd3 = union d1, d2;\nz1 = group reps by 'OwnerId' left, d3 by 'Id';\nz1 = foreach z1 generate first(reps['Group By']) as 'Group By', sum(reps['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_${Variables.Opportunity_Amount.fieldName}', sum(reps['avg_${Variables.Opportunity_Amount.fieldName}']) as 'avg_${Variables.Opportunity_Amount.fieldName}', sum(reps['count']) as 'count';\nown = filter srcOppty by 'Owner.Role.DeveloperName' in {{ results(mgr_get_manager,'Role.DeveloperName') }} or 'Owner.Role.DeveloperName' in {{ selection(filter_role) }};\nown = group own by 'Owner.Role.DeveloperName';\nown = foreach own generate 'Owner.Role.DeveloperName' as 'Group By', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}', avg('${Variables.Opportunity_Amount.fieldName}') as 'avg_${Variables.Opportunity_Amount.fieldName}',count() as 'count';\ndir = filter srcOppty by 'Owner.RoleNames' in {{ results(mgr_get_manager,'Role.DeveloperName') }};\ndir = group dir by 'Owner.RoleNames';\ndir = foreach dir generate 'Owner.RoleNames' as 'Group By', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}', avg('${Variables.Opportunity_Amount.fieldName}') as 'avg_${Variables.Opportunity_Amount.fieldName}',count() as 'count';\noppty = union own,dir;\noppty = group oppty by 'Group By';\noppty = foreach oppty generate 'Group By' as 'Group By', sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}', sum('avg_${Variables.Opportunity_Amount.fieldName}') as 'avg_${Variables.Opportunity_Amount.fieldName}', sum('count') as 'count';\nd4 = group usr_filtered by 'Role.DeveloperName';\nd4 = foreach d4 generate 'Role.DeveloperName';\nz2 = group oppty by 'Group By', d4 by 'Role.DeveloperName';\nz2 = foreach z2 generate oppty['Group By'] as 'Group By', sum(oppty['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_${Variables.Opportunity_Amount.fieldName}', sum(oppty['sum_${Variables.Opportunity_Amount.fieldName}'])/sum(oppty['count']) as 'avg_${Variables.Opportunity_Amount.fieldName}', sum(oppty['count']) as 'count';\nz3 = union z1, z2;z3 = group z3 by 'Group By';z3 = foreach z3 generate 'Group By' as 'Group By', sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}';",
                "disableCaching" : true,
                "groups" : [
  "Group By"
  ],
                "filters" : [ ]
              },
              "version" : -1.0
            }
          },
  {
            "header" : "Best Case",
            "query" : {
              "query" : {
                "measures" : [
  [
  "sum",
  "${Variables.Opportunity_Amount.fieldName}"
  ]
  ],
                "pigql" : "srcUsr = load \"${App.EdgeMarts.user.Alias}\";\nusr_filtered = filter srcUsr by 'ParentRole.DeveloperName' in {{ selection(filter_role) }};\nsrcOppty = load \"${App.EdgeMarts.opportunity.Alias}\";\n;srcOppty = filter srcOppty by 'IsClosed' == \"false\";  srcOppty = filter srcOppty by 'ForecastCategory' ==  \"BestCase\";srcOppty = filter srcOppty by 'ForecastCategoryName' in  {{selection(step_type_of_forecast)}};\nsrcOppty = filter srcOppty by '${Variables.Bookings.fieldName}' in {{ selection(Type_26) }};\nsrcOppty = filter srcOppty by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in  [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];\nreps = filter srcOppty by 'Owner.Role.DeveloperName' in {{ selection(filter_role) }};\nreps = group reps by 'OwnerId';\nreps = foreach reps generate 'OwnerId', first('Owner.Name') as 'Group By', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}' , avg('${Variables.Opportunity_Amount.fieldName}') as 'avg_${Variables.Opportunity_Amount.fieldName}',count() as 'count';\nd1 = group usr_filtered by 'Id';\nd1 = foreach d1 generate 'Id';\nd2 = group srcUsr by 'Id';\nd2 = foreach d2 generate 'Id';\nd3 = union d1, d2;\nz1 = group reps by 'OwnerId' left, d3 by 'Id';\nz1 = foreach z1 generate first(reps['Group By']) as 'Group By', sum(reps['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_${Variables.Opportunity_Amount.fieldName}', sum(reps['avg_${Variables.Opportunity_Amount.fieldName}']) as 'avg_${Variables.Opportunity_Amount.fieldName}', sum(reps['count']) as 'count';\nown = filter srcOppty by 'Owner.Role.DeveloperName' in {{ results(mgr_get_manager,'Role.DeveloperName') }} or 'Owner.Role.DeveloperName' in {{ selection(filter_role) }};\nown = group own by 'Owner.Role.DeveloperName';\nown = foreach own generate 'Owner.Role.DeveloperName' as 'Group By', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}', avg('${Variables.Opportunity_Amount.fieldName}') as 'avg_${Variables.Opportunity_Amount.fieldName}',count() as 'count';\ndir = filter srcOppty by 'Owner.RoleNames' in {{ results(mgr_get_manager,'Role.DeveloperName') }};\ndir = group dir by 'Owner.RoleNames';\ndir = foreach dir generate 'Owner.RoleNames' as 'Group By', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}', avg('${Variables.Opportunity_Amount.fieldName}') as 'avg_${Variables.Opportunity_Amount.fieldName}',count() as 'count';\noppty = union own,dir;\noppty = group oppty by 'Group By';\noppty = foreach oppty generate 'Group By' as 'Group By', sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}', sum('avg_${Variables.Opportunity_Amount.fieldName}') as 'avg_${Variables.Opportunity_Amount.fieldName}', sum('count') as 'count';\nd4 = group usr_filtered by 'Role.DeveloperName';\nd4 = foreach d4 generate 'Role.DeveloperName';\nz2 = group oppty by 'Group By', d4 by 'Role.DeveloperName';\nz2 = foreach z2 generate oppty['Group By'] as 'Group By', sum(oppty['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_${Variables.Opportunity_Amount.fieldName}', sum(oppty['sum_${Variables.Opportunity_Amount.fieldName}'])/sum(oppty['count']) as 'avg_${Variables.Opportunity_Amount.fieldName}', sum(oppty['count']) as 'count';\nz3 = union z1, z2;z3 = group z3 by 'Group By';z3 = foreach z3 generate 'Group By' as 'Group By', sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}';",
                "disableCaching" : true,
                "groups" : [
  "Group By"
  ],
                "filters" : [ ]
              },
              "version" : -1.0
            }
          },
  {
            "header" : "Pipeline",
            "query" : {
              "query" : {
                "measures" : [
  [
  "sum",
  "${Variables.Opportunity_Amount.fieldName}"
  ]
  ],
                "pigql" : "srcUsr = load \"${App.EdgeMarts.user.Alias}\";\nusr_filtered = filter srcUsr by 'ParentRole.DeveloperName' in {{ selection(filter_role) }};\nsrcOppty = load \"${App.EdgeMarts.opportunity.Alias}\";\n;srcOppty = filter srcOppty by 'IsClosed' == \"false\";  srcOppty = filter srcOppty by 'ForecastCategory' ==  \"Pipeline\";srcOppty = filter srcOppty by 'ForecastCategoryName' in  {{selection(step_type_of_forecast)}};\nsrcOppty = filter srcOppty by '${Variables.Bookings.fieldName}' in {{ selection(Type_26) }};\nsrcOppty = filter srcOppty by date('CloseDate_Year', 'CloseDate_Month', 'CloseDate_Day') in [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];\nreps = filter srcOppty by 'Owner.Role.DeveloperName' in {{ selection(filter_role) }};\nreps = group reps by 'OwnerId';\nreps = foreach reps generate 'OwnerId', first('Owner.Name') as 'Group By', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}' , avg('${Variables.Opportunity_Amount.fieldName}') as 'avg_${Variables.Opportunity_Amount.fieldName}',count() as 'count';\nd1 = group usr_filtered by 'Id';\nd1 = foreach d1 generate 'Id';\nd2 = group srcUsr by 'Id';\nd2 = foreach d2 generate 'Id';\nd3 = union d1, d2;\nz1 = group reps by 'OwnerId' left, d3 by 'Id';\nz1 = foreach z1 generate first(reps['Group By']) as 'Group By', sum(reps['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_${Variables.Opportunity_Amount.fieldName}', sum(reps['avg_${Variables.Opportunity_Amount.fieldName}']) as 'avg_${Variables.Opportunity_Amount.fieldName}', sum(reps['count']) as 'count';\nown = filter srcOppty by 'Owner.Role.DeveloperName' in {{ results(mgr_get_manager,'Role.DeveloperName') }} or 'Owner.Role.DeveloperName' in {{ selection(filter_role) }};\nown = group own by 'Owner.Role.DeveloperName';\nown = foreach own generate 'Owner.Role.DeveloperName' as 'Group By', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}', avg('${Variables.Opportunity_Amount.fieldName}') as 'avg_${Variables.Opportunity_Amount.fieldName}',count() as 'count';\ndir = filter srcOppty by 'Owner.RoleNames' in {{ results(mgr_get_manager,'Role.DeveloperName') }};\ndir = group dir by 'Owner.RoleNames';\ndir = foreach dir generate 'Owner.RoleNames' as 'Group By', sum('${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}', avg('${Variables.Opportunity_Amount.fieldName}') as 'avg_${Variables.Opportunity_Amount.fieldName}',count() as 'count';\noppty = union own,dir;\noppty = group oppty by 'Group By';\noppty = foreach oppty generate 'Group By' as 'Group By', sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}', sum('avg_${Variables.Opportunity_Amount.fieldName}') as 'avg_${Variables.Opportunity_Amount.fieldName}', sum('count') as 'count';\nd4 = group usr_filtered by 'Role.DeveloperName';\nd4 = foreach d4 generate 'Role.DeveloperName';\nz2 = group oppty by 'Group By', d4 by 'Role.DeveloperName';\nz2 = foreach z2 generate oppty['Group By'] as 'Group By', sum(oppty['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_${Variables.Opportunity_Amount.fieldName}', sum(oppty['sum_${Variables.Opportunity_Amount.fieldName}'])/sum(oppty['count']) as 'avg_${Variables.Opportunity_Amount.fieldName}', sum(oppty['count']) as 'count';\nz3 = union z1, z2;z3 = group z3 by 'Group By';z3 = foreach z3 generate 'Group By' as 'Group By', sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_${Variables.Opportunity_Amount.fieldName}';",
                "disableCaching" : true,
                "groups" : [
  "Group By"
  ],
                "filters" : [ ]
              },
              "version" : -1.0
            }
          },
  {
            "header" : "Forecast",
            "query" : {
              "query" : {
                "measures" : [
  [
  "sum",
  "${Variables.Opportunity_Amount.fieldName}"
  ]
  ],
                "disableCaching" : true,
                "formula" : "A+B+C+D",
                "groups" : [
  "Group By"
  ],
                "filters" : [ ]
              },
              "version" : -1.0
            }
          },
  {
            "header" : "Quota",
            "query" : {
              "query" : {
                "measures" : [
  [
  "sum",
  "QuotaAmount"
  ]
  ],
                "pigql" : "srcUsr = load \"${App.EdgeMarts.user.Alias}\";usr_filtered = filter srcUsr by 'ParentRole.DeveloperName' in {{ selection(filter_role) }};d1 = group usr_filtered by 'Id';d1 = foreach d1 generate 'Id';d2 = group srcUsr by 'Id';d2 = foreach d2 generate 'Id';d3 = union d1, d2;d4 = group usr_filtered by 'Role.DeveloperName';d4 = foreach d4 generate 'Role.DeveloperName';srcQuot = load \"${App.EdgeMarts.quota.Alias}\";srcQuot = filter srcQuot by date('StartDate_Year', 'StartDate_Month', 'StartDate_Day')  in [{{ no_quote(value(field(selection(step_grouplist3), 'Current_pigql'))) }}];repsQuot = filter srcQuot by 'User.Role.DeveloperName' in {{ selection(filter_role) }};repsQuot = group repsQuot by 'User.Id';repsQuot = foreach repsQuot generate 'User.Id', first('User.Name') as 'Group By', sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}';z1Quot = group repsQuot by 'User.Id' left, d3 by 'Id';z1Quot = foreach z1Quot generate first(repsQuot['Group By']) as 'Group By', sum(repsQuot['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_${Variables.Opportunity_Amount.fieldName}';ownQuot = filter srcQuot by 'User.Role.DeveloperName' in {{ results(mgr_get_manager,'Role.DeveloperName') }} or 'User.Role.DeveloperName' in {{ selection(filter_role) }} ;ownQuot = group ownQuot by 'User.Role.DeveloperName';ownQuot = foreach ownQuot generate \"S\" as 'GroupType', 'User.Role.DeveloperName' as 'Group By', sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}';dirQuot = filter srcQuot by 'User.RoleNames' in {{ results(mgr_get_manager,'Role.DeveloperName') }};dirQuot = group dirQuot by 'User.RoleNames';dirQuot = foreach dirQuot generate \"D\" as 'GroupType', 'User.RoleNames' as 'Group By', sum('QuotaAmount') as 'sum_${Variables.Opportunity_Amount.fieldName}';quota = union ownQuot, dirQuot;z2Quot = group quota by 'Group By', d4 by 'Role.DeveloperName';z2Quot = foreach z2Quot generate quota['Group By'] as 'Group By', sum(quota['sum_${Variables.Opportunity_Amount.fieldName}']) as 'sum_${Variables.Opportunity_Amount.fieldName}';z3Quot = union z1Quot, z2Quot;z3Quot = group z3Quot by 'Group By';z3Quot = foreach z3Quot generate 'Group By' as 'Group By' ,sum('sum_${Variables.Opportunity_Amount.fieldName}') as 'sum_QuotaAmount';",
                "disableCaching" : true,
                "groups" : [
  "Group By"
  ],
                "filters" : [ ]
              },
              "version" : -1.0
            }
          },
  {
            "header" : "Forecast - Quota",
            "query" : {
              "query" : {
                "measures" : [
  [
  "sum",
  "${Variables.Opportunity_Amount.fieldName}"
  ]
  ],
                "disableCaching" : true,
                "formula" : "E-F",
                "groups" : [
  "Group By"
  ],
                "filters" : [ ]
              },
              "version" : -1.0
            },
            "showBars" : true,
            "sort" : "ascending"
          }
  ],
        "datasets" : [
  {
            "name" : "${App.EdgeMarts.opportunity.Alias}"
          }
  ],
        "isFacet" : false,
        "isGlobal" : false,
        "selectMode" : "single",
        "type" : "multi",
        "useGlobal" : false,
        "visualizationParameters" : {
          "visualizationType" : "comparisontable"
        }
      }
    },
    "widgets" : {
      "number_12" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : false,
          "fontSize" : 18,
          "measureField" : "avg_forecast",
          "step" : "_PIGQL_step_5",
          "textAlignment" : "left",
          "textColor" : "rgb(51, 51, 51)",
          "title" : "Avg Selling Price"
        },
        "position" : {
          "w" : "130",
          "x" : 620,
          "y" : 250,
          "zIndex" : 984
        },
        "type" : "number"
      },
      "number_11" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : false,
          "fontSize" : 18,
          "measureField" : "avg_${Variables.Opportunity_Amount.fieldName}",
          "step" : "_PIGQL_step_4",
          "textAlignment" : "left",
          "textColor" : "rgb(51, 51, 51)",
          "title" : "Avg Selling Price "
        },
        "position" : {
          "w" : "130",
          "x" : 390,
          "y" : 250,
          "zIndex" : 987
        },
        "type" : "number"
      },
      "number_10" : {
        "parameters" : {
          "exploreLink" : false,
          "fontSize" : 18,
          "measureField" : "count",
          "step" : "_PIGQL_step_4",
          "textAlignment" : "left",
          "textColor" : "rgb(51, 51, 51)",
          "title" : "Opportunities"
        },
        "position" : {
          "w" : "130",
          "x" : 280,
          "y" : 250,
          "zIndex" : 986
        },
        "type" : "number"
      },
      "text_19" : {
        "parameters" : {
          "fontSize" : 24,
          "text" : "Quota\nAttainment",
          "textAlignment" : "left",
          "textColor" : "rgb(22, 50, 92)"
        },
        "position" : {
          "x" : 320,
          "y" : 30,
          "zIndex" : 5
        },
        "type" : "text"
      },
      "number_18" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : false,
          "fontSize" : 18,
          "measureField" : "avg_${Variables.Opportunity_Amount.fieldName}",
          "step" : "Amount_23",
          "textAlignment" : "left",
          "textColor" : "rgb(51, 51, 51)",
          "title" : "Avg Selling Price"
        },
        "position" : {
          "w" : "130",
          "x" : 120,
          "y" : 250,
          "zIndex" : 974
        },
        "type" : "number"
      },
      "number_17" : {
        "parameters" : {
          "exploreLink" : false,
          "fontSize" : 26,
          "measureField" : "sum_forecast",
          "step" : "_PIGQL_step_5",
          "textAlignment" : "left",
          "title" : ""
        },
        "position" : {
          "w" : "220",
          "x" : 520,
          "y" : 170,
          "zIndex" : 982
        },
        "type" : "number"
      },
      "number_16" : {
        "parameters" : {
          "exploreLink" : false,
          "fontSize" : 18,
          "measureField" : "count",
          "step" : "_PIGQL_step_5",
          "textAlignment" : "left",
          "textColor" : "rgb(51, 51, 51)",
          "title" : "Opportunities"
        },
        "position" : {
          "w" : "130",
          "x" : 530,
          "y" : 250,
          "zIndex" : 983
        },
        "type" : "number"
      },
      "box_lightgray" : {
        "parameters" : {
          "backgroundColor" : "rgb(242, 246, 250)",
          "borderColor" : "rgba(146, 103, 194, 0)"
        },
        "position" : {
          "h" : "1390",
          "w" : "1380",
          "x" : 0,
          "y" : 0,
          "zIndex" : 7
        },
        "type" : "box"
      },
      "text_12" : {
        "parameters" : {
          "fontSize" : 20,
          "text" : "Team Performance",
          "textAlignment" : "left",
          "textColor" : "rgb(125, 152, 179)"
        },
        "position" : {
          "x" : 20,
          "y" : 380,
          "zIndex" : 967
        },
        "type" : "text"
      },
      "text_126" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Forecast to Quota",
          "textAlignment" : "left",
          "textColor" : "rgb(22, 50, 92)"
        },
        "position" : {
          "x" : 1140,
          "y" : 120,
          "zIndex" : 997
        },
        "type" : "text"
      },
      "box_19" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(92, 122, 153)"
        },
        "position" : {
          "h" : "220",
          "w" : "360",
          "x" : 780,
          "y" : 110,
          "zIndex" : 9
        },
        "type" : "box"
      },
      "box_17" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(163, 184, 204)"
        },
        "position" : {
          "h" : "360",
          "w" : "1310",
          "x" : 30,
          "y" : 420,
          "zIndex" : 47
        },
        "type" : "box"
      },
      "box_16" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(163, 184, 204)"
        },
        "position" : {
          "h" : "190",
          "w" : "210",
          "x" : 530,
          "y" : 120,
          "zIndex" : 48
        },
        "type" : "box"
      },
      "box_15" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(163, 184, 204)"
        },
        "position" : {
          "h" : "190",
          "w" : "210",
          "x" : 280,
          "y" : 120,
          "zIndex" : 45
        },
        "type" : "box"
      },
      "box_14" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(92, 122, 153)"
        },
        "position" : {
          "h" : "220",
          "w" : "210",
          "x" : 1140,
          "y" : 110,
          "zIndex" : 59
        },
        "type" : "box"
      },
      "box_NewLine" : {
        "parameters" : {
          "backgroundColor" : "rgb(240,240,244)",
          "borderColor" : "rgba(0, 0, 0, 0)"
        },
        "position" : {
          "h" : "40",
          "w" : "260",
          "x" : 310,
          "y" : 0,
          "zIndex" : 0
        },
        "type" : "box"
      },
      "chart_6" : {
        "parameters" : {
          "legend" : true,
          "visualizationType" : "stackvbar",
          "step" : "CloseDate_Year_CloseDate_Month_ForecastCategory_21",
          "exploreLink" : false
        },
        "position" : {
          "h" : "230",
          "w" : "520",
          "x" : 50,
          "y" : 910,
          "zIndex" : 976
        },
        "type" : "chart"
      },
      "box_12" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(163, 184, 204)"
        },
        "position" : {
          "h" : "500",
          "w" : "1310",
          "x" : 30,
          "y" : 850,
          "zIndex" : 41
        },
        "type" : "box"
      },
      "chart_8" : {
        "parameters" : {
          "legend" : true,
          "visualizationType" : "scatter",
          "step" : "forecast_to_close_3",
          "exploreLink" : false
        },
        "position" : {
          "h" : "260",
          "w" : "530",
          "x" : 790,
          "y" : 490,
          "zIndex" : 9999
        },
        "type" : "chart"
      },
      "box_11" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(92, 122, 153)"
        },
        "position" : {
          "h" : "220",
          "w" : "150",
          "x" : 780,
          "y" : 110,
          "zIndex" : 10
        },
        "type" : "box"
      },
      "chart_7" : {
        "parameters" : {
          "visualizationType" : "stackhbar",
          "step" : "_PIGQL_CF",
          "exploreLink" : false,
          "miniBars" : 6
        },
        "position" : {
          "h" : "100",
          "w" : "150",
          "x" : 1140,
          "y" : 130,
          "zIndex" : 996
        },
        "type" : "chart"
      },
      "chart_4" : {
        "parameters" : {
          "legend" : true,
          "visualizationType" : "stackvbar",
          "step" : "CloseDate_Year_CloseDate_Month_ForecastCategory_18",
          "exploreLink" : false
        },
        "position" : {
          "h" : "230",
          "w" : "620",
          "x" : 700,
          "y" : 910,
          "zIndex" : 970
        },
        "type" : "chart"
      },
      "number_200" : {
        "parameters" : {
          "exploreLink" : false,
          "fontSize" : 18,
          "measureField" : "count",
          "step" : "step_3",
          "textAlignment" : "left",
          "textColor" : "rgb(51, 51, 51)",
          "title" : "Opportunities"
        },
        "position" : {
          "w" : "130",
          "x" : 30,
          "y" : 250,
          "zIndex" : 19
        },
        "type" : "number"
      },
      "Text_Title" : {
        "parameters" : {
          "fontSize" : 36,
          "text" : "Forecast Review",
          "textAlignment" : "left",
          "textColor" : "rgb(41, 71, 102)"
        },
        "position" : {
          "x" : 10,
          "y" : 10,
          "zIndex" : 27
        },
        "type" : "text"
      },
      "number_23" : {
        "parameters" : {
          "exploreLink" : false,
          "fontSize" : 14,
          "measureField" : "sum_YoY",
          "step" : "_PIGQL_step_quota_yoy",
          "textAlignment" : "left",
          "textColor" : "rgb(64, 96, 127)",
          "title" : ""
        },
        "position" : {
          "w" : "130",
          "x" : 860,
          "y" : 200,
          "zIndex" : 995
        },
        "type" : "number"
      },
      "number_21" : {
        "parameters" : {
          "exploreLink" : false,
          "fontSize" : 14,
          "measureField" : "sum_YoY",
          "step" : "_PIGQL_step_yoy",
          "textAlignment" : "left",
          "textColor" : "rgb(64, 96, 127)",
          "title" : ""
        },
        "position" : {
          "w" : "130",
          "x" : 620,
          "y" : 200,
          "zIndex" : 985
        },
        "type" : "number"
      },
      "dimfilter_7" : {
        "parameters" : {
          "expanded" : false,
          "exploreLink" : false,
          "step" : "filter_role",
          "title" : "Owner Role View as"
        },
        "position" : {
          "h" : "50",
          "w" : "150",
          "x" : 860,
          "y" : 10,
          "zIndex" : 100004
        },
        "type" : "listselector"
      },
      "comparetable_2" : {
        "parameters" : {
          "exploreLink" : false,
          "step" : "compare_41",
          "totals" : true
        },
        "position" : {
          "h" : "280",
          "w" : "770",
          "x" : 30,
          "y" : 480,
          "zIndex" : 58
        },
        "type" : "comparetable"
      },
      "dimfilter_4" : {
        "parameters" : {
          "expanded" : false,
          "exploreLink" : false,
          "measureField" : "",
          "step" : "step_grouplist3",
          "title" : "Quota Period"
        },
        "position" : {
          "h" : "50",
          "w" : "150",
          "x" : 690,
          "y" : 10,
          "zIndex" : 100000
        },
        "type" : "listselector"
      },
      "dimfilter_5" : {
        "parameters" : {
          "expanded" : false,
          "instant" : false,
          "step" : "Type_26"
        },
        "position" : {
          "h" : "50",
          "w" : "150",
          "x" : 1030,
          "y" : 10,
          "zIndex" : 100003
        },
        "type" : "listselector"
      },
      "number_29" : {
        "parameters" : {
          "exploreLink" : false,
          "fontSize" : 28,
          "measureField" : "sum_quota_attainment",
          "step" : "attainment_Quota_Forecast",
          "textAlignment" : "center",
          "title" : ""
        },
        "position" : {
          "w" : "130",
          "x" : 940,
          "y" : 150,
          "zIndex" : 996
        },
        "type" : "number"
      },
      "number_need_to_close" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : false,
          "fontSize" : 28,
          "measureField" : "sum_need_to_close",
          "step" : "step_need_to_close",
          "textAlignment" : "left",
          "textColor" : "rgb(0, 0, 0)",
          "title" : "Need to Close"
        },
        "position" : {
          "w" : "200",
          "x" : 930,
          "y" : 220,
          "zIndex" : 958
        },
        "type" : "number"
      },
      "dimfilter_6" : {
        "parameters" : {
          "expanded" : false,
          "instant" : false,
          "step" : "step_type_of_forecast",
          "title" : "Expected to Close"
        },
        "position" : {
          "h" : "50",
          "w" : "140",
          "x" : 1200,
          "y" : 10,
          "zIndex" : 100004
        },
        "type" : "listselector"
      },
      "text_120" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Quota Attainment vs Forecast to Quota",
          "textAlignment" : "left",
          "textColor" : "rgb(22, 50, 92)"
        },
        "position" : {
          "x" : 790,
          "y" : 440,
          "zIndex" : 967
        },
        "type" : "text"
      },
      "number_26" : {
        "parameters" : {
          "exploreLink" : false,
          "fontSize" : 28,
          "measureField" : "sum_quota_attainment",
          "step" : "forecast_to_quota",
          "textAlignment" : "center",
          "title" : ""
        },
        "position" : {
          "w" : "130",
          "x" : 1150,
          "y" : 150,
          "zIndex" : 999
        },
        "type" : "number"
      },
      "text_41" : {
        "parameters" : {
          "fontSize" : 11,
          "text" : "Last Year's Won",
          "textAlignment" : "left",
          "textColor" : "rgb(64, 96, 127)"
        },
        "position" : {
          "x" : 780,
          "y" : 200,
          "zIndex" : 994
        },
        "type" : "text"
      },
      "text_40" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Current Period",
          "textAlignment" : "left",
          "textColor" : "rgb(22, 50, 92)"
        },
        "position" : {
          "x" : 40,
          "y" : 870,
          "zIndex" : 979
        },
        "type" : "text"
      },
      "box_27" : {
        "parameters" : {
          "backgroundColor" : "rgba(0, 140, 201, 0)",
          "borderColor" : "rgba(0, 0, 0, 0)"
        },
        "position" : {
          "h" : "50",
          "w" : "380",
          "x" : 930,
          "y" : 170,
          "zIndex" : 10000
        },
        "type" : "box"
      },
      "box_24" : {
        "parameters" : {
          "backgroundColor" : "rgb(92, 122, 153)",
          "borderColor" : "rgba(0, 0, 0, 0)"
        },
        "position" : {
          "h" : "280",
          "w" : "1380",
          "x" : 0,
          "y" : 80,
          "zIndex" : 8
        },
        "type" : "box"
      },
      "chart_13" : {
        "parameters" : {
          "visualizationType" : "stackhbar",
          "step" : "step_kpi_1_cf",
          "exploreLink" : false,
          "miniBars" : 6
        },
        "position" : {
          "h" : "100",
          "w" : "150",
          "x" : 930,
          "y" : 130,
          "zIndex" : 949
        },
        "type" : "chart"
      },
      "valuestable_1" : {
        "parameters" : {
          "exploreLink" : false,
          "step" : "lens_19"
        },
        "position" : {
          "h" : "190",
          "w" : "620",
          "x" : 700,
          "y" : 1130,
          "zIndex" : 971
        },
        "type" : "valuestable"
      },
      "valuestable_2" : {
        "parameters" : {
          "exploreLink" : false,
          "step" : "lens_23"
        },
        "position" : {
          "h" : "190",
          "w" : "570",
          "x" : 60,
          "y" : 1130,
          "zIndex" : 977
        },
        "type" : "valuestable"
      },
      "text_36" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Quota Attainment",
          "textAlignment" : "left",
          "textColor" : "rgb(22, 50, 92)"
        },
        "position" : {
          "x" : 930,
          "y" : 120,
          "zIndex" : 993
        },
        "type" : "text"
      },
      "box_line1" : {
        "parameters" : {
          "backgroundColor" : "rgb(240, 240, 244)",
          "borderColor" : "rgba(0, 0, 0, 0)"
        },
        "position" : {
          "h" : "40",
          "w" : "290",
          "x" : 350,
          "y" : 0,
          "zIndex" : 4
        },
        "type" : "box"
      },
      "text_38" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Next Period",
          "textAlignment" : "left",
          "textColor" : "rgb(22, 50, 92)"
        },
        "position" : {
          "x" : 680,
          "y" : 870,
          "zIndex" : 963
        },
        "type" : "text"
      },
      "text_37" : {
        "parameters" : {
          "fontSize" : 11,
          "text" : "Last Year's Won",
          "textAlignment" : "left",
          "textColor" : "rgb(64, 96, 127)"
        },
        "position" : {
          "x" : 540,
          "y" : 200,
          "zIndex" : 48
        },
        "type" : "text"
      },
      "box_NewLine3" : {
        "parameters" : {
          "backgroundColor" : "rgb(240,240,244)",
          "borderColor" : "rgba(0, 0, 0, 0)"
        },
        "position" : {
          "h" : "40",
          "w" : "260",
          "x" : 310,
          "y" : 0,
          "zIndex" : 0
        },
        "type" : "box"
      },
      "number_9" : {
        "parameters" : {
          "exploreLink" : false,
          "fontSize" : 26,
          "measureField" : "sum_${Variables.Opportunity_Amount.fieldName}",
          "step" : "_PIGQL_step_4",
          "textAlignment" : "left",
          "title" : ""
        },
        "position" : {
          "w" : "220",
          "x" : 270,
          "y" : 170,
          "zIndex" : 980
        },
        "type" : "number"
      },
      "box_NewLine2" : {
        "parameters" : {
          "backgroundColor" : "rgb(240,240,244)",
          "borderColor" : "rgba(0, 0, 0, 0)"
        },
        "position" : {
          "h" : "40",
          "w" : "260",
          "x" : 310,
          "y" : 0,
          "zIndex" : 0
        },
        "type" : "box"
      },
      "text_31" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Expected to Close",
          "textAlignment" : "left",
          "textColor" : "rgb(22, 50, 92)"
        },
        "position" : {
          "x" : 280,
          "y" : 130,
          "zIndex" : 988
        },
        "type" : "text"
      },
      "box_NewLine1" : {
        "parameters" : {
          "backgroundColor" : "rgb(240,240,244)",
          "borderColor" : "rgba(0, 0, 0, 0)"
        },
        "position" : {
          "h" : "40",
          "w" : "260",
          "x" : 310,
          "y" : 0,
          "zIndex" : 0
        },
        "type" : "box"
      },
      "number_7" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : false,
          "fontSize" : 28,
          "measureField" : "sum_QuotaAmount",
          "step" : "step_12",
          "textAlignment" : "left",
          "textColor" : "rgb(0, 0, 0)",
          "title" : ""
        },
        "position" : {
          "w" : "190",
          "x" : 780,
          "y" : 170,
          "zIndex" : 991
        },
        "type" : "number"
      },
      "number_100" : {
        "parameters" : {
          "exploreLink" : false,
          "fontSize" : 26,
          "measureField" : "sum_${Variables.Opportunity_Amount.fieldName}",
          "step" : "step_2",
          "textAlignment" : "left",
          "textColor" : "rgb(0, 0, 0)",
          "title" : ""
        },
        "position" : {
          "w" : "220",
          "x" : 20,
          "y" : 170,
          "zIndex" : 957
        },
        "type" : "number"
      },
      "sel_hbar_time" : {
        "parameters" : {
          "exploreLink" : false,
          "step" : "step_hbar_time",
          "title" : ""
        },
        "position" : {
          "w" : "190",
          "x" : 1150,
          "y" : 790,
          "zIndex" : 973
        },
        "type" : "pillbox"
      },
      "box_4" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(163, 184, 204)"
        },
        "position" : {
          "h" : "190",
          "w" : "210",
          "x" : 30,
          "y" : 120,
          "zIndex" : 12
        },
        "type" : "box"
      },
      "box_7" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(255, 255, 255)"
        },
        "position" : {
          "h" : "40",
          "w" : "130",
          "x" : 950,
          "y" : 150,
          "zIndex" : 985
        },
        "type" : "box"
      },
      "box_NewLine21" : {
        "parameters" : {
          "backgroundColor" : "rgb(240,240,244)",
          "borderColor" : "rgba(0, 0, 0, 0)"
        },
        "position" : {
          "h" : "40",
          "w" : "260",
          "x" : 310,
          "y" : 0,
          "zIndex" : -1
        },
        "type" : "box"
      },
      "Text_Total" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Forecast",
          "textAlignment" : "left",
          "textColor" : "rgb(22, 50, 92)"
        },
        "position" : {
          "x" : 530,
          "y" : 130,
          "zIndex" : 987
        },
        "type" : "text"
      },
      "box_8" : {
        "parameters" : {
          "backgroundColor" : "rgb(255, 255, 255)",
          "borderColor" : "rgb(255, 255, 255)"
        },
        "position" : {
          "h" : "40",
          "w" : "130",
          "x" : 1150,
          "y" : 150,
          "zIndex" : 998
        },
        "type" : "box"
      },
      "text_28" : {
        "parameters" : {
          "fontSize" : 24,
          "text" : "Expected\n to Close",
          "textAlignment" : "left",
          "textColor" : "rgb(22, 50, 92)"
        },
        "position" : {
          "x" : 310,
          "y" : 20,
          "zIndex" : -1
        },
        "type" : "text"
      },
      "text_24" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Quota",
          "textAlignment" : "left",
          "textColor" : "rgb(22, 50, 92)"
        },
        "position" : {
          "x" : 780,
          "y" : 130,
          "zIndex" : 992
        },
        "type" : "text"
      },
      "text_27" : {
        "parameters" : {
          "fontSize" : 20,
          "text" : "Top Open Deals",
          "textAlignment" : "left",
          "textColor" : "rgb(125, 152, 179)"
        },
        "position" : {
          "x" : 30,
          "y" : 810,
          "zIndex" : 48
        },
        "type" : "text"
      },
      "link_2" : {
        "parameters" : {
          "destination" : "${App.Dashboards['Sales Wave - Pipeline Trending'].Id}",
          "destinationType" : "dashboard",
          "text" : "SEE PIPE CHANGES",
          "textColor" : "rgb(118, 136, 169)",
          "visualizationType" : "hbar"
        },
        "position" : {
          "x" : 1180,
          "y" : 290,
          "zIndex" : 99
        },
        "type" : "link"
      },
      "text_26" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Forecast by Owner",
          "textColor" : "rgb(22, 50, 92)"
        },
        "position" : {
          "x" : 40,
          "y" : 440,
          "zIndex" : 48
        },
        "type" : "text"
      },
      "text_21" : {
        "parameters" : {
          "fontSize" : 60,
          "text" : "+",
          "textAlignment" : "left",
          "textColor" : "rgb(255, 255, 255)"
        },
        "position" : {
          "x" : 220,
          "y" : 170,
          "zIndex" : 990
        },
        "type" : "text"
      },
      "text_20" : {
        "parameters" : {
          "fontSize" : 24,
          "text" : "Forecast\nto Quota",
          "textAlignment" : "left",
          "textColor" : "rgb(22, 50, 92)"
        },
        "position" : {
          "x" : 440,
          "y" : 40,
          "zIndex" : 6
        },
        "type" : "text"
      },
      "text_23" : {
        "parameters" : {
          "fontSize" : 55,
          "text" : "=",
          "textAlignment" : "left",
          "textColor" : "rgb(255, 255, 255)"
        },
        "position" : {
          "x" : 470,
          "y" : 170,
          "zIndex" : 989
        },
        "type" : "text"
      },
      "text_67" : {
        "parameters" : {
          "fontSize" : 16,
          "text" : "Won",
          "textAlignment" : "left",
          "textColor" : "rgb(22, 50, 92)"
        },
        "position" : {
          "x" : 30,
          "y" : 130,
          "zIndex" : 40
        },
        "type" : "text"
      },
      "number_need_to_find" : {
        "parameters" : {
          "compact" : true,
          "exploreLink" : false,
          "fontSize" : 28,
          "measureField" : "sum_need_to_find",
          "step" : "step_need_to_find",
          "textAlignment" : "left",
          "textColor" : "rgb(0, 0, 0)",
          "title" : "Need to Find"
        },
        "position" : {
          "w" : "200",
          "x" : 1140,
          "y" : 220,
          "zIndex" : 975
        },
        "type" : "number"
      },
      "link_pipe_review" : {
        "parameters" : {
          "destination" : "${App.Dashboards['Sales Wave - Pipe Review'].Id}",
          "destinationType" : "dashboard",
          "text" : "REVIEW PIPE",
          "textColor" : "rgb(118, 136, 169)",
          "visualizationType" : "hbar"
        },
        "position" : {
          "x" : 970,
          "y" : 290,
          "zIndex" : 966
        },
        "type" : "link"
      }
    }
  }
}