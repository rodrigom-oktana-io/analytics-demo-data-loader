<apex:page sidebar="false" controller="WaveDataManagerController" action="{!checkMetadataAPIConnection}">
	<script>
	function createRemoteSite()
	{
	    // Disable button
	    document.getElementById('createremotesitebtn').disabled = true;
	    // Calls the Metdata API from JavaScript to create the Remote Site Setting to permit Apex callouts
	    var binding = new XMLHttpRequest();
	    var request =
	        '<?xml version="1.0" encoding="utf-8"?>' +
	        '<env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">'+
	            '<env:Header>' +
	                '<urn:SessionHeader xmlns:urn="http://soap.sforce.com/2006/04/metadata">' +
	                    '<urn:sessionId>{!$Api.Session_ID}</urn:sessionId>' +
	                '</urn:SessionHeader>' +
	            '</env:Header>' +
	            '<env:Body>' +
	                '<createMetadata xmlns="http://soap.sforce.com/2006/04/metadata">' +
	                    '<metadata xsi:type="RemoteSiteSetting">' +
	                        '<fullName>wavedatamanager_mdapi</fullName>' +
	                        '<description>Metadata API Remote Site Setting for Wave Data Manager</description>' +
	                        '<disableProtocolSecurity>false</disableProtocolSecurity>' +
	                        '<isActive>true</isActive>' +
	                        '<url>https://{!Host}</url>' +
	                    '</metadata>' +
	                '</createMetadata>' +
	            '</env:Body>' +
	        '</env:Envelope>';
	    binding.open('POST', 'https://{!Host}/services/Soap/m/31.0');
	    binding.setRequestHeader('SOAPAction','""');
	    binding.setRequestHeader('Content-Type', 'text/xml');
	    binding.onreadystatechange =
	        function() {
	        	debugger;
	            if(this.readyState==4) {
	                var parser = new DOMParser();
	                var doc  = parser.parseFromString(this.response, 'application/xml');
	                var errors = doc.getElementsByTagName('errors');
	                var messageText = '';
	                for(var errorIdx = 0; errorIdx < errors.length; errorIdx++)
	                    messageText+= errors.item(errorIdx).getElementsByTagName('message').item(0).innerHTML + '\n';
	                displayMetadataResponse(messageText);
	            }
	        }
	    binding.send(request);
	}
	</script>
	<apex:sectionHeader title="Wave Data Manager" subtitle="Configuration and Data Loading"/>
	<vs:importvisualstrap theme="paper" />
	<vs:visualstrapblock id="form1">	   		   	
	   	<!--All the  Visualstrap content and Visualforce content here -->
	   	<apex:form rendered="{!!MetadataConnectionWarning}">
	   		<apex:commandButton value="Run Data Generation" styleClass="btn-primary" action="{!run}"/>
	   		<br /><br />
	   		<vs:panel type="default" title="Results" id="messages" rendered="{!successMessage != '' || errorMessage != '' || warningMessage != ''}">
	   			<vs:alert type="success" rendered="{!successMessage != ''}">
	    			<apex:outputText value="{!successMessage}" />
				</vs:alert>
				<vs:alert type="danger" rendered="{!errorMessage != ''}">
	    			<apex:outputText value="{!errorMessage}" />
				</vs:alert>
				<vs:alert type="warning" rendered="{!warningMessage != ''}">
	    			<apex:outputText value="{!warningMessage}" />
				</vs:alert>
			</vs:panel>
	   	</apex:form>
	</vs:visualstrapblock>
	<apex:form id="form2">
		<apex:actionFunction name="displayMetadataResponse" action="{!displayMetadataResponse}" rerender="form1,form2">
			<apex:param name="metadataResponse" assignTo="{!metadataResponse}" value="{!metadataResponse}"/>
		</apex:actionFunction>		
		<apex:pageMessages />
		<apex:outputPanel rendered="{!MetadataConnectionWarning}">
			<h1>Important Pre Install Step:</h1> 
			<p>In order to utilize the features of this tool you need to permit it to access the Salesforce Metadata API of your organization by adding a <a target="_new" href="http://na1.salesforce.com/help/doc/en/configuring_remoteproxy.htm">Remote Site Setting</a> with this Salesforce Server URL <b>https://{!Host}</b></p>
			<p> Click the <b>Create Remote Site Setting</b> button to have the tool perform this step for you.</p>
			<input id="createremotesitebtn" type="button" onclick="createRemoteSite();" value="Create Remote Site Setting"/>
		</apex:outputPanel>
	</apex:form>
	<apex:form id="form3">
		<apex:actionPoller action="{!checkProcessingStatus}" reRender="processingStatus,processingLogConsole,messages,form1,form3" interval="5" enabled="{!objectsNodes.size > 0}" id="checkFunction"/>
		<apex:outputText value="{!jobStatusDsc}" id="processingStatus"/>
		<apex:outputPanel>
			<apex:repeat value="{!processingLog}" var="logEntry" id="processingLogConsole">
				<apex:outputText value="{!logEntry}" /><br />
			</apex:repeat>
		</apex:outputPanel>
	</apex:form>
</apex:page>